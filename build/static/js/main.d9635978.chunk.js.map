{"version":3,"sources":["deepstate.js","forms.js","uiutil.js","BeginRestore.js","Table.js","DirectoryItems.js","DirectoryObject.js","kopia-flat.svg","PoliciesTable.js","SetupAzure.js","SetupB2.js","SetupFilesystem.js","SetupGCS.js","SetupKopiaServer.js","SetupRclone.js","SetupS3.js","SetupSFTP.js","SetupToken.js","SetupRepository.js","SetupWebDAV.js","RepoStatus.js","SnapshotsTable.js","SourcesTable.js","TaskLogs.js","TaskDetails.js","TasksTable.js","PolicyEditor.js","EstimateResults.js","NewSnapshot.js","PolicyEditorPage.js","App.js","index.js"],"names":["setDeepStateProperty","component","name","value","newState","state","st","parts","split","i","length","part","undefined","setState","getDeepStateProperty","defaultValue","validateRequiredFields","fields","updateState","failed","field","handleChange","event","valueGetter","x","this","target","stateProperty","RequiredField","label","props","helpText","Form","Group","as","Col","Label","className","Control","size","isInvalid","onChange","Text","Feedback","type","OptionalField","invalidFeedback","valueToNumber","t","v","Number","parseInt","isNaN","isInvalidNumber","OptionalNumberField","e","RequiredNumberField","hasExactlyOneOf","names","count","checkedToBool","checked","RequiredBoolean","Check","optionalBooleanValue","OptionalBoolean","defaultLabel","multilineStringToList","StringList","join","rows","TimesOfDayList","parseTimeOfDay","match","exec","h","m","valid","hour","min","fromMultilineString","result","line","push","FormGroup","tmp","tod","toMultilineString","LogDetailSelector","base10UnitPrefixes","niceNumber","f","Math","round","sizeWithFailures","summ","errors","numFailed","sizeDisplayName","caption","prefix","map","path","error","color","icon","faExclamationTriangle","title","s","thousand","prefixes","suffix","toDecimalUnitString","parseQuery","queryString","query","pairs","substr","pair","decodeURIComponent","rfc3339TimestampForDisplay","n","Date","toLocaleString","objectLink","startsWith","ownerName","userName","host","compare","a","b","redirectIfNotConnected","response","data","code","window","location","replace","formatMilliseconds","ms","formatDuration","from","to","valueOf","cancelTask","tid","axios","post","then","catch","GoBackButton","Button","variant","faChevronLeft","PolicyTypeName","policyEditorURL","sourceQueryStringParams","src","encodeURIComponent","errorAlert","err","alert","Error","JSON","stringify","DirectorySelector","onDirectorySelected","inputProps","kopiaUI","InputGroup","FormControl","onClick","selectDirectory","faFolderOpen","CLIEquivalent","useState","visible","setVisible","cliInfo","setCLIInfo","executable","get","ref","React","createRef","faTerminal","class","el","current","select","setSelectionRange","document","execCommand","faCopy","command","BeginRestore","incremental","continueOnErrors","restoreOwnership","restorePermissions","restoreModTimes","uncompressedZip","overwriteFiles","overwriteDirectories","overwriteSymlinks","ignorePermissionErrors","writeFilesAtomically","restoreDirEntryAtDepth","minSizeForPlaceholder","restoreTask","bind","start","preventDefault","dst","destination","req","root","params","oid","options","ignoreErrors","endsWith","zipFile","tarFile","fsOutput","targetPath","skipOwners","skipPermissions","skipTimes","id","history","goBack","onSubmit","Row","autoFocus","placeholder","Component","paginationItems","active","gotoPage","items","pageWithNumber","number","Pagination","Item","dotDotDot","Ellipsis","minPageNumber","maxPageNumber","MyTable","columns","useTable","initialState","pageSize","autoResetPage","autoResetSortBy","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","nextPage","previousPage","setPageSize","pageIndex","paginationUI","First","disabled","Prev","Next","Last","Table","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","style","width","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","DirectoryItems","Header","accessor","obj","typeID","href","directoryLinkOrDownload","Cell","item","original","DirectoryObject","isLoading","mountInfo","mount","unmount","browseMounted","copyPath","fetchDirectory","entries","delete","browseDirectory","querySelector","message","Spinner","animation","xs","localPolicies","allPolicies","globalPolicy","perUserPolicies","perHostPolicies","PoliciesTable","editorTarget","selectedOwner","policyPath","sources","editPolicyForPath","fetchPolicies","fetchSourcesWithoutSpinner","policies","localSourceName","localUsername","localHost","multiUser","p","substring","letter","toUpperCase","isAbsolutePath","isEmpty","key","hasOwnProperty","bits","policy","retention","Badge","bg","files","errorHandling","compression","scheduling","uniqueOwners","reduce","d","owner","source","includes","sort","filter","l","r","hc","uc","policySummary","Dropdown","Toggle","faUserFriends","Menu","selectOwner","Divider","SetupAzure","initial","SetupB2","SetupFilesystem","SetupGCS","SetupKopiaServer","SetupRclone","SetupS3","SetupSFTP","port","validated","externalSSH","SetupToken","supportedProviders","provider","description","SetupRepository","confirmCreate","showAdvanced","storageVerified","providerSettings","formatVersion","optionsEditor","connectToRepository","createRepository","cancelCreate","toggleAdvanced","verifyStorage","algorithms","hash","defaultHash","encryption","defaultEncryption","splitter","defaultSplitter","indexVersion","username","hostname","ed","validate","password","confirmPassword","request","storage","config","blockFormat","version","objectFormat","clientOptions","connectError","token","apiServer","readonly","SelectedProvider","prov","connectionErrorInfo","loadingSpinner","faAngleDoubleUp","faAngleDoubleDown","toggleAdvancedButton","Collapse","in","overrideUsernameHostnameRow","readOnly","renderConfirmCreate","renderConfirmConnect","renderProviderConfiguration","renderProviderSelection","renderInternal","RepoStatus","status","mounted","disconnect","updateDescription","fetchStatus","connected","pill","apiServerURL","configFile","supportsContentCompression","SnapshotsTable","snapshots","showHidden","oldProps","oldState","fetchSnapshots","q","search","hiddenCount","selectedSnapshot","u","console","log","unfilteredCount","uniqueCount","startTime","rootID","tag","summary","controlId","localSnapshots","allSnapshots","SourcesTable","isRefreshing","selectedDirectory","sync","cancelSnapshot","startSnapshot","interval","setInterval","clearInterval","parent","upload","totals","hashedFiles","hashedBytes","cachedFiles","cachedBytes","directory","totalBytes","estimatedBytes","percent","currentTask","sortType","lastSnapshot","stats","totalSize","rootEntry","moment","fromNow","nextSnapshotTime","isBefore","statusCell","faSync","TaskLogs","fetchLog","messagesEndRef","scrollToBottom","msg","taskID","oldLogs","logs","lastMessage","getHours","getMinutes","getSeconds","getMilliseconds","c","scrollIntoView","behavior","level","fullLogTime","ts","formatLogTime","TaskDetails","showLog","fetchTask","task","endTime","dur","Alert","errorMessage","progressInfo","showZeroCounters","valueThreshold","formatted","units","counters","keys","Object","counterLevelToSortOrder","counterBadge","faStopCircle","hideDescription","kind","summaryControl","sortedBadges","faChevronCircleUp","faChevronCircleDown","TasksTable","showKind","showStatus","uniqueKinds","fetchTasks","tasks","o","getUniqueKinds","toLowerCase","searchDescription","indexOf","taskMatches","faWindowClose","faCheck","faExclamationCircle","faBan","taskStatusSymbol","filteredItems","filterItems","k","faInfoCircle","LabelColumn","sm","help","ValueColumn","children","WideValueColumn","EffectiveValue","policyField","dsp","EffectiveValueColumn","PolicyDefinitionPoint","EffectiveTextAreaValue","EffectiveBooleanValue","SectionHeaderRow","PolicyEditor","fetchPolicy","saveChanges","isGlobal","deletePolicy","policyURL","resolvePolicy","getAndValidatePolicy","prevProps","pjs","lastResolvedPolicy","isNew","resolved","removeEmpty","parse","ignore","ignoreDotFiles","onlyCompress","neverCompress","timeOfDay","validateTimesOfDay","saving","put","close","confirm","times","Accordion","defaultActiveKey","eventKey","faCalendarTimes","Body","faFileArchive","faClock","upcomingSnapshotTimes","format","faFileAlt","faMagic","embedded","EstimateResults","taskStatusDescription","NewSnapshot","estimateTaskID","estimateTaskVisible","lastEstimatedPath","policyEditorVisibleFor","policyEditorRef","estimate","snapshotNow","lastResolvedPath","resolvedSource","pe","maxExamplesPerBucket","policyOverride","estimatingPath","didEstimate","createSnapshot","PolicyEditorPage","editorRef","App","runningTaskCount","setRunningTaskCount","callback","delay","savedCallback","useRef","useEffect","useInterval","Navbar","expand","Brand","logo","alt","Nav","activeClassName","Container","fluid","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d9635978.chunk.js","sourcesContent":["// functions in deep state manipulate nested component state by using path expressions.\n\n// getDeepStateProperty returns the provided deep state property or a default value\n// For example: { \"a\": { \"b\": { \"c\": true } } }\n// getDeepStateProperty(\"a\") returns {b\":{\"c\":true}}\n// getDeepStateProperty(\"a.b\") returns {\"c\":true}\n// getDeepStateProperty(\"a.b.c\") returns true\n\nexport function setDeepStateProperty(component, name, value) {\n    let newState = { ...component.state };\n    let st = newState;\n\n    const parts = name.split(/\\./);\n\n    for (let i = 0; i < parts.length - 1; i++) {\n        const part = parts[i];\n\n        if (st[part] === undefined) {\n            st[part] = {}\n        } else {\n            st[part] = { ...st[part] }\n        }\n\n        st = st[part]\n    }\n\n    const part = parts[parts.length - 1]\n    st[part] = value;\n\n    component.setState(newState);\n}\n\n// getDeepStateProperty returns the provided deep state property or a default value\n// For example: { \"a\": { \"b\": { \"c\": true } } }\n// getDeepStateProperty(\"a\") returns {b\":{\"c\":true}}\n// getDeepStateProperty(\"a.b\") returns {\"c\":true}\n// getDeepStateProperty(\"a.b.c\") returns true\nexport function getDeepStateProperty(component, name, defaultValue = \"\") {\n    let st = component.state;\n    const parts = name.split(/\\./);\n\n    for (let i = 0; i < parts.length; i++) {\n        const part = parts[i];\n\n        if (part in st) {\n            st = st[part];\n        } else {\n            return defaultValue;\n        }\n    }\n\n    return st;\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport FormGroup from 'react-bootstrap/FormGroup';\n\nimport { getDeepStateProperty, setDeepStateProperty } from './deepstate.js';\n\nexport function validateRequiredFields(component, fields) {\n    let updateState = {};\n    let failed = false;\n\n    for (let i = 0; i < fields.length; i++) {\n        const field = fields[i];\n\n        if (!component.state[field]) {\n            // explicitly set field to empty string, component triggers validation error UI.\n            updateState[field] = '';\n            failed = true;\n        }\n    }\n\n    if (failed) {\n        component.setState(updateState);\n        return false;\n    }\n\n    return true;\n}\n\nexport function handleChange(event, valueGetter = x => x.value) {\n    setDeepStateProperty(this, event.target.name, valueGetter(event.target));\n}\n\nexport function stateProperty(component, name, defaultValue = \"\") {\n    return getDeepStateProperty(component, name);\n}\n\nexport function RequiredField(component, label, name, props = {}, helpText = null) {\n    return <Form.Group as={Col}>\n        <Form.Label className=\"required\">{label}</Form.Label>\n        <Form.Control\n            size=\"sm\"\n            isInvalid={stateProperty(component, name, null) === ''}\n            name={name}\n            value={stateProperty(component, name)}\n            data-testid={'control-' + name}\n            onChange={component.handleChange}\n            {...props} />\n        {helpText && <Form.Text className=\"text-muted\">{helpText}</Form.Text>}\n        <Form.Control.Feedback type=\"invalid\">{label} Is Required</Form.Control.Feedback>\n    </Form.Group>\n}\n\nexport function OptionalField(component, label, name, props = {}, helpText = null, invalidFeedback = null) {\n    return <Form.Group as={Col}>\n        <Form.Label>{label}</Form.Label>\n        <Form.Control\n            size=\"sm\"\n            name={name}\n            value={stateProperty(component, name)}\n            data-testid={'control-' + name}\n            onChange={component.handleChange}\n            {...props} />\n        {helpText && <Form.Text className=\"text-muted\">{helpText}</Form.Text>}\n        {invalidFeedback && <Form.Control.Feedback type=\"invalid\">{invalidFeedback}</Form.Control.Feedback>}\n    </Form.Group>\n}\n\nexport function valueToNumber(t) {\n    if (t.value === \"\") {\n        return undefined;\n    }\n\n    const v = Number.parseInt(t.value);\n    if (isNaN(v)) {\n        return t.value + '';\n    }\n\n    return v;\n}\n\nfunction isInvalidNumber(v) {\n    if (v === undefined || v === '') {\n        return false\n    }\n\n    if (isNaN(Number.parseInt(v))) {\n        return true;\n    }\n\n    return false;\n}\n\n\nexport function OptionalNumberField(component, label, name, props = {}) {\n    return <Form.Group as={Col}>\n        {label && <Form.Label>{label}</Form.Label>}\n        <Form.Control\n            size=\"sm\"\n            name={name}\n            isInvalid={isInvalidNumber(stateProperty(component, name))}\n            value={stateProperty(component, name)}\n            onChange={e => component.handleChange(e, valueToNumber)}\n            data-testid={'control-' + name}\n            {...props} />\n        <Form.Control.Feedback type=\"invalid\">Must be a valid number or empty</Form.Control.Feedback>\n    </Form.Group>\n}\n\n\nexport function RequiredNumberField(component, label, name, props = {}) {\n    return <Form.Group as={Col}>\n        <Form.Label>{label}</Form.Label>\n        <Form.Control\n            size=\"sm\"\n            name={name}\n            isInvalid={stateProperty(component, name, null) === '' || isInvalidNumber(stateProperty(component, name))}\n            value={stateProperty(component, name)}\n            onChange={e => component.handleChange(e, valueToNumber)}\n            data-testid={'control-' + name}\n            {...props} />\n        <Form.Control.Feedback type=\"invalid\">Must be a valid number or empty</Form.Control.Feedback>\n    </Form.Group>\n}\n\nexport function hasExactlyOneOf(component, names) {\n    let count = 0;\n\n    for (let i = 0; i < names.length; i++) {\n        if (stateProperty(component, names[i])) {\n            count++\n        }\n    }\n\n    return count === 1;\n}\n\nfunction checkedToBool(t) {\n    if (t.checked) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function RequiredBoolean(component, label, name, helpText) {\n    return <Form.Group as={Col}>\n        <Form.Check\n            label={label}\n            name={name}\n            className=\"required\"\n            checked={stateProperty(component, name)}\n            onChange={e => component.handleChange(e, checkedToBool)}\n            data-testid={'control-' + name}\n            type=\"checkbox\" />\n        {helpText && <Form.Text className=\"text-muted\">{helpText}</Form.Text>}\n    </Form.Group>\n}\n\nfunction optionalBooleanValue(target) {\n    if (target.value === \"true\") {\n        return true;\n    }\n    if (target.value === \"false\") {\n        return false;\n    }\n\n    return undefined;\n}\n\nexport function OptionalBoolean(component, label, name, defaultLabel) {\n    return <Form.Group as={Col}>\n        {label && <Form.Label>{label}</Form.Label>}\n        <Form.Control\n            size=\"sm\"\n            name={name}\n            value={stateProperty(component, name)}\n            onChange={e => component.handleChange(e, optionalBooleanValue)}\n            as=\"select\">\n            <option value=\"\">{defaultLabel}</option>\n            <option value=\"true\">yes</option>\n            <option value=\"false\">no</option>\n        </Form.Control>\n    </Form.Group>\n}\n\nfunction listToMultilineString(v) {\n    if (v) {\n        return v.join(\"\\n\");\n    }\n\n    return \"\";\n}\n\nfunction multilineStringToList(target) {\n    const v = target.value;\n    if (v === \"\") {\n        return undefined;\n    }\n\n    return v.split(/\\n/);\n}\n\nexport function StringList(component, name) {\n    return <Form.Group as={Col}>\n        <Form.Control\n            size=\"sm\"\n            name={name}\n            value={listToMultilineString(stateProperty(component, name))}\n            onChange={e => component.handleChange(e, multilineStringToList)}\n            as=\"textarea\"\n            rows=\"5\">\n        </Form.Control>\n    </Form.Group>\n}\n\nexport function TimesOfDayList(component, name) {\n    function parseTimeOfDay(v) {\n        var re = /(\\d+):(\\d+)/;\n\n        const match = re.exec(v);\n        if (match) {\n            const h = parseInt(match[1]);\n            const m = parseInt(match[2]);\n            let valid = (h < 24 && m < 60);\n\n            if (m < 10 && match[2].length === 1) {\n                valid = false;\n            }\n\n            if (valid) {\n                return {hour: h, min: m}\n            }\n        }\n\n        return v;\n    }\n\n    function toMultilineString(v) {\n        if (v) {\n            let tmp = [];\n\n            for (const tod of v) {\n                if (tod.hour) {\n                    tmp.push(tod.hour + \":\" + (tod.min < 10 ? \"0\": \"\") + tod.min);\n                } else {\n                    tmp.push(tod);\n                }\n            }\n\n            return tmp.join(\"\\n\");\n        }\n    \n        return \"\";\n    }\n    \n    function fromMultilineString(target) {\n        const v = target.value;\n        if (v === \"\") {\n            return undefined;\n        }\n\n        let result = [];\n    \n        for (const line of v.split(/\\n/)) {\n            result.push(parseTimeOfDay(line));\n        };\n\n        return result;\n    }\n    \n    return <FormGroup>\n        <Form.Control\n            size=\"sm\"\n            name={name}\n            value={toMultilineString(stateProperty(component, name))}\n            onChange={e => component.handleChange(e, fromMultilineString)}\n            as=\"textarea\"\n            rows=\"5\">\n        </Form.Control>\n        <Form.Control.Feedback type=\"invalid\">Invalid Times of Day</Form.Control.Feedback>\n   </FormGroup>;\n}\n\nexport function LogDetailSelector(component, name) {\n    return <Form.Control as=\"select\" size=\"sm\"\n    name={name}\n    onChange={e => component.handleChange(e, valueToNumber)}\n    value={stateProperty(component, name)}>\n    <option value=\"\">(inherit from parent)</option>\n    <option value=\"0\">0 - no output</option>\n    <option value=\"1\">1 - minimal details</option>\n    <option value=\"2\">2</option>\n    <option value=\"3\">3</option>\n    <option value=\"4\">4</option>\n    <option value=\"5\">5 - normal details</option>\n    <option value=\"6\">6</option>\n    <option value=\"7\">7</option>\n    <option value=\"8\">8</option>\n    <option value=\"9\">9</option>\n    <option value=\"10\">10 - maximum details</option>\n</Form.Control>\n}","import { faBan, faCheck, faChevronLeft, faCopy, faExclamationCircle, faExclamationTriangle, faFolderOpen, faTerminal, faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Link } from 'react-router-dom';\n\nconst base10UnitPrefixes = [\"\", \"K\", \"M\", \"G\", \"T\"];\n\nfunction niceNumber(f) {\n    return (Math.round(f * 10) / 10.0) + '';\n}\n\nfunction toDecimalUnitString(f, thousand, prefixes, suffix) {\n    for (var i = 0; i < prefixes.length; i++) {\n        if (f < 0.9 * thousand) {\n            return niceNumber(f) + ' ' + prefixes[i] + suffix;\n        }\n        f /= thousand\n    }\n\n    return niceNumber(f) + ' ' + prefixes[prefixes.length - 1] + suffix;\n}\n\nexport function sizeWithFailures(size, summ) {\n    if (size === undefined) {\n        return \"\";\n    }\n\n    if (!summ || !summ.errors || !summ.numFailed) {\n        return <span>{sizeDisplayName(size)}</span>\n    }\n\n    let caption = \"Encountered \" + summ.numFailed + \" errors:\\n\\n\";\n    let prefix = \"- \"\n    if (summ.numFailed === 1) {\n        caption = \"Error: \";\n        prefix = \"\";\n    }\n\n    caption += summ.errors.map(x => prefix + x.path + \": \" + x.error).join(\"\\n\");\n\n    return <span>\n        {sizeDisplayName(size)}&nbsp;\n        <FontAwesomeIcon color=\"red\" icon={faExclamationTriangle} title={caption} />\n    </span>;\n}\n\nexport function sizeDisplayName(s) {\n    if (s === undefined) {\n        return \"\";\n    }\n    return toDecimalUnitString(s, 1000, base10UnitPrefixes, \"B\");\n}\n\nexport function intervalDisplayName(v) {\n    return \"-\";\n}\n\nexport function timesOfDayDisplayName(v) {\n    if (!v) {\n        return \"(none)\";\n    }\n    return v.length + \" times\";\n}\n\nexport function parseQuery(queryString) {\n    var query = {};\n    var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n    for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('=');\n        query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n    return query;\n}\n\nexport function rfc3339TimestampForDisplay(n) {\n    if (!n) {\n        return \"\";\n    }\n\n    let t = new Date(n);\n    return t.toLocaleString();\n}\n\nexport function objectLink(n) {\n    if (n.startsWith(\"k\")) {\n        return \"/snapshots/dir/\" + n;\n    }\n    return \"/api/v1/objects/\" + n;\n}\n\nexport function ownerName(s) {\n    return s.userName + \"@\" + s.host;\n}\n\nexport function compare(a, b) {\n    return (a < b ? -1 : (a > b ? 1 : 0));\n}\n\nexport function redirectIfNotConnected(e) {\n    if (e && e.response && e.response.data && e.response.data.code === \"NOT_CONNECTED\") {\n        window.location.replace(\"/repo\");\n        return;\n    }\n}\n\nexport function formatMilliseconds(ms) {\n    return Math.round(ms / 100.0) / 10.0 + \"s\"\n}\n\nexport function formatDuration(from, to) {\n    if (!from) {\n        return \"\";\n    }\n\n    if (!to) {\n        const ms = new Date().valueOf() - new Date(from).valueOf();\n        if (ms < 0) {\n            return \"\"\n        }\n\n        return formatMilliseconds(ms)\n    }\n\n    return formatMilliseconds(new Date(to).valueOf() - new Date(from).valueOf());\n}\n\nexport function taskStatusSymbol(task) {\n    const st = task.status;\n    const dur = formatDuration(task.startTime, task.endTime);\n\n    switch (st) {\n        case \"RUNNING\":\n            return <>\n                <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /> Running for {dur}\n                &nbsp;\n                <FontAwesomeIcon size=\"sm\" color=\"red\" icon={faWindowClose} title=\"Cancel task\" onClick={() => cancelTask(task.id)} />\n            </>;\n\n        case \"SUCCESS\":\n            return <p><FontAwesomeIcon icon={faCheck} color=\"green\" /> Finished in {dur}</p>;\n\n        case \"FAILED\":\n            return <p><FontAwesomeIcon icon={faExclamationCircle} color=\"red\" /> Failed after {dur}</p>;\n\n        case \"CANCELED\":\n            return <p><FontAwesomeIcon icon={faBan} /> Canceled after {dur}</p>;\n\n        default:\n            return st;\n    }\n}\n\nexport function cancelTask(tid) {\n    axios.post('/api/v1/tasks/' + tid + '/cancel', {}).then(result => {\n    }).catch(error => {\n    });\n}\n\nexport function GoBackButton(props) {\n    return <Button size=\"sm\" variant=\"outline-secondary\" {...props}><FontAwesomeIcon icon={faChevronLeft} /> Return </Button>;\n}\n\nexport function PolicyTypeName(s) {\n    if (!s.host && !s.userName) {\n        return \"Global Policy\"\n    }\n\n    if (!s.userName) {\n        return \"Host: \" + s.host;\n    }\n\n    if (!s.path) {\n        return \"User: \" + s.userName + \"@\" + s.host;\n    }\n\n    return \"Directory: \" + s.userName + \"@\" + s.host + \":\" + s.path;\n}\n\nexport function policyEditorURL(s) {\n    return '/policies/edit?' + sourceQueryStringParams(s);\n}\n\nexport function PolicyEditorLink(s) {\n    return <Link to={policyEditorURL(s)}>{PolicyTypeName(s)}</Link>;\n}\n\nexport function sourceQueryStringParams(src) {\n    return 'userName=' + encodeURIComponent(src.userName) + '&host=' + encodeURIComponent(src.host) + '&path=' + encodeURIComponent(src.path);\n}\n\nexport function isAbsolutePath(p) {\n    // Unix-style path.\n    if (p.startsWith(\"/\")) {\n        return true;\n    }\n\n    // Windows-style X:\\... path.\n    if (p.length >= 3 && p.substring(1, 3) === \":\\\\\") {\n        const letter = p.substring(0, 1).toUpperCase();\n\n        return letter >= \"A\" && letter <= \"Z\";\n    }\n\n    // Windows UNC path.\n    if (p.startsWith(\"\\\\\\\\\")) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function errorAlert(err, prefix) {\n    if (!prefix) {\n        prefix = \"Error\"\n    }\n\n    prefix += \": \";\n\n    if (err.response && err.response.data && err.response.data.error) {\n        alert(prefix + err.response.data.error);\n    } else if (err instanceof Error) {\n        alert(err);\n    } else {\n        alert(prefix + JSON.stringify(err));\n    }\n}\n\nexport function DirectorySelector(props) {\n    let { onDirectorySelected, ...inputProps } = props;\n\n    if (!window.kopiaUI) {\n        return <Form.Control size=\"sm\" {...inputProps} />\n    }\n\n    return <InputGroup>\n        <FormControl size=\"sm\" {...inputProps} />\n        <Button size=\"sm\" onClick={() => window.kopiaUI.selectDirectory(onDirectorySelected)}>\n            <FontAwesomeIcon icon={faFolderOpen} />\n        </Button>\n    </InputGroup>;\n}\n\nexport function CLIEquivalent(props) {\n    let [visible, setVisible] = useState(false);\n    let [cliInfo, setCLIInfo] = useState({});\n\n    if (visible && !cliInfo.executable) {\n        axios.get('/api/v1/cli').then(result => {\n            setCLIInfo(result.data);\n        }).catch(error => { });\n    }\n\n    const ref = React.createRef()\n\n    function copyToClibopard() {\n        const el = ref.current;\n        if (!el) {\n            return\n        }\n\n        el.select();\n        el.setSelectionRange(0, 99999);\n\n        document.execCommand(\"copy\");\n    }\n\n\n    return <>\n        <InputGroup size=\"sm\" >\n            <Button size=\"sm\" title=\"Click to show CLI equivalent\" variant=\"warning\" onClick={() => setVisible(!visible)}><FontAwesomeIcon size=\"sm\" icon={faTerminal} /></Button>\n            {visible && <Button class=\"sm\" variant=\"outline-dark\" title=\"Copy to clipboard\" onClick={copyToClibopard} ><FontAwesomeIcon size=\"sm\" icon={faCopy} /></Button>}\n            {visible && <FormControl size=\"sm\" ref={ref} className=\"cli-equivalent\" value={`${cliInfo.executable} ${props.command}`} />}\n        </InputGroup>\n    </>;\n}\n\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from \"react-router-dom\";\nimport { handleChange, RequiredBoolean, RequiredField, RequiredNumberField, validateRequiredFields } from './forms';\nimport { errorAlert, GoBackButton } from './uiutil';\n\nexport class BeginRestore extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            incremental: true,\n            continueOnErrors: false,\n            restoreOwnership: true,\n            restorePermissions: true,\n            restoreModTimes: true,\n            uncompressedZip: true,\n            overwriteFiles: false,\n            overwriteDirectories: false,\n            overwriteSymlinks: false,\n            ignorePermissionErrors: true,\n            writeFilesAtomically: false,\n            restoreDirEntryAtDepth: 1000,\n            minSizeForPlaceholder: 0,\n            restoreTask: \"\",\n        };\n\n        this.handleChange = handleChange.bind(this);\n        this.start = this.start.bind(this);\n    }\n\n    start(e) {\n        e.preventDefault();\n\n        if (!validateRequiredFields(this, [\"destination\"])) {\n            return;\n        }\n\n        const dst = (this.state.destination + \"\");\n\n        let req = {\n            root: this.props.match.params.oid,\n            options: {\n                incremental: this.state.incremental,\n                ignoreErrors: this.state.continueOnErrors,\n                restoreDirEntryAtDepth: this.state.restoreDirEntryAtDepth,\n                minSizeForPlaceholder: this.state.minSizeForPlaceholder,\n            },\n        }\n\n        if (dst.endsWith(\".zip\")) {\n            req.zipFile = dst;\n            req.uncompressedZip = this.state.uncompressedZip;\n        } else if (dst.endsWith(\".tar\")) {\n            req.tarFile = dst;\n        } else {\n            req.fsOutput = {\n                targetPath: dst,\n                skipOwners: !this.state.restoreOwnership,\n                skipPermissions: !this.state.restorePermissions,\n                skipTimes: !this.state.restoreModTimes,\n\n                ignorePermissionErrors: this.state.ignorePermissionErrors,\n                overwriteFiles: this.state.overwriteFiles,\n                overwriteDirectories: this.state.overwriteDirectories,\n                overwriteSymlinks: this.state.overwriteSymlinks,\n                writeFilesAtomically: this.state.writeFilesAtomically\n            }\n        }\n\n        axios.post('/api/v1/restore', req).then(result => {\n            this.setState({\n                restoreTask: result.data.id,\n            })\n            this.props.history.replace(\"/tasks/\" + result.data.id);\n        }).catch(error => {\n            errorAlert(error);\n        });\n    }\n\n    render() {\n        if (this.state.restoreTask) {\n            return <p>\n                <GoBackButton onClick={this.props.history.goBack} />\n                <Link replace=\"true\" to={\"/tasks/\" + this.state.restoreTask}>Go To Restore Task</Link>.\n            </p>;\n        }\n\n        return <div className=\"padded-top\">\n            <GoBackButton onClick={this.props.history.goBack} />&nbsp;<span className=\"page-title\">Restore</span>\n            <hr/>\n            <Form onSubmit={this.start}>\n                <Row>\n                    {RequiredField(this, \"Destination\", \"destination\", {\n                        autoFocus: true,\n                        placeholder: \"enter destination path\",\n                    },\n                        \"You can also restore to a .zip or .tar file by providing the appropriate extension.\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Skip previously restored files and symlinks\", \"incremental\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Continue on Errors\", \"continueOnErrors\", \"When a restore error occurs, attempt to continue instead of failing fast.\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Restore File Ownership\", \"restoreOwnership\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Restore File Permissions\", \"restorePermissions\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Restore File Modification Time\", \"restoreModTimes\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Overwrite Files\", \"overwriteFiles\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Overwrite Directories\", \"overwriteDirectories\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Overwrite Symbolic Links\", \"overwriteSymlinks\")}\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Write files atomically\", \"writeFilesAtomically\")}\n                </Row>\n                <Row>\n                    <Col><hr/></Col>\n                </Row>\n                <Row>\n                    {RequiredNumberField(this, \"Shallow Restore At Depth\", \"restoreDirEntryAtDepth\")}\n                    {RequiredNumberField(this, \"Minimal File Size For Shallow Restore\", \"minSizeForPlaceholder\")}\n                </Row>\n                <Row>\n                    <Col><hr/></Col>\n                </Row>\n                <Row>\n                    {RequiredBoolean(this, \"Disable ZIP compression\", \"uncompressedZip\", \"Do not compress when restoring to a ZIP file (faster).\")}\n                </Row>\n                <Row>\n                    <Col><hr/></Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button variant=\"primary\" type=\"submit\" data-testid=\"submit-button\">Begin Restore</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>;\n    }\n}\n","import React from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Table from 'react-bootstrap/Table';\nimport { usePagination, useSortBy, useTable } from 'react-table';\n\nfunction paginationItems(count, active, gotoPage) {\n  let items = [];\n\n  function pageWithNumber(number) {\n    return <Pagination.Item key={number} active={number === active} onClick={() => gotoPage(number-1)}>\n      {number}\n    </Pagination.Item>;\n  }\n\n  function dotDotDot() {\n    return <Pagination.Ellipsis />;\n  }\n\n  let minPageNumber = active - 10;\n  if (minPageNumber < 1) {\n    minPageNumber = 1;\n  }\n\n  let maxPageNumber = active + 9;\n  if (minPageNumber + 19 >= maxPageNumber) {\n    maxPageNumber = minPageNumber + 19;\n  }\n  if (maxPageNumber > count) {\n    maxPageNumber = count;\n  }\n\n  if (minPageNumber > 1) {\n    items.push(dotDotDot());\n  }\n\n  for (let number = minPageNumber; number <= maxPageNumber; number++) {\n    items.push(pageWithNumber(number));\n  }\n\n  if (maxPageNumber < count) {\n    items.push(dotDotDot());\n  }\n\n  return items;\n}\n\nexport default function MyTable({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable({\n    columns,\n    data,\n    initialState: { pageSize: 10 },\n    autoResetPage: false,\n    autoResetSortBy: false,\n  },\n    useSortBy,\n    usePagination,\n  )\n\n  if (pageIndex >= pageCount && pageIndex !== 0 && pageCount > 0) {\n    gotoPage(pageCount - 1);\n  }\n\n  const paginationUI = pageOptions.length > 1 && \n  <>\n    <Pagination size=\"sm\" variant=\"dark\">\n      <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n      <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n      {paginationItems(pageOptions.length, pageIndex+1, gotoPage)}\n      <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n      <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\n    </Pagination>\n    <Pagination size=\"sm\" variant=\"dark\">\n    <select value={pageSize} onChange={e => {setPageSize(Number(e.target.value))}}>\n      {[10, 20, 30, 40, 50, 100].map(pageSize => (<option key={pageSize} value={pageSize}>Show {pageSize}</option>))}\n    </select>\n    </Pagination>\n    </>;\n\n  return (\n    <>\n      <Table size=\"sm\" striped bordered hover {...getTableProps()}>\n        <thead className=\"table-dark\">\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps({...column.getSortByToggleProps(), style: {\n                  width: column.width,\n                }})}>{column.render('Header')}\n                 {column.isSorted ? (column.isSortedDesc ? '🔽' : '🔼') : ''}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map(\n            (row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  })}\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </Table>\n      { paginationUI }\n    </>\n  )\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport MyTable from './Table';\nimport { objectLink, rfc3339TimestampForDisplay, sizeWithFailures } from './uiutil';\n\nfunction objectName(name, typeID) {\n    if (typeID === \"d\") {\n        return name + \"/\";\n    }\n\n    return name\n}\n\nfunction sizeInfo(item) {\n    if (item.size) {\n        return item.size;\n    }\n\n    if (item.summ && item.summ.size) {\n        return item.summ.size;\n    }\n\n    return 0;\n}\n\nfunction directoryLinkOrDownload(x) {\n    if (x.obj.startsWith(\"k\")) {\n        return <Link to={objectLink(x.obj)}>{objectName(x.name, x.type)}</Link>;\n    }\n\n    return <a href={\"/api/v1/objects/\" + x.obj + \"?fname=\" + encodeURIComponent(x.name)}>{x.name}</a>;\n}\n\nexport class DirectoryItems extends Component {\n    render() {\n        const columns = [{\n            id: \"name\",\n            Header: 'Name',\n            width: \"\",\n            accessor: x => directoryLinkOrDownload(x),\n        }, {\n            id: \"mtime\",\n            accessor: \"mtime\",\n            Header: \"Last Mod\",\n            width: 200,\n            Cell: x => rfc3339TimestampForDisplay(x.cell.value),\n        }, {\n            id: \"size\",\n            accessor: x => sizeInfo(x),\n            Header: \"Size\",\n            width: 100,\n            Cell: x => sizeWithFailures(x.cell.value, x.row.original.summ),\n        }, {\n            id: \"files\",\n            accessor: \"summ.files\",\n            Header: \"Files\",\n            width: 100,\n        }, {\n            id: \"dirs\",\n            accessor: \"summ.dirs\",\n            Header: \"Dirs\",\n            width: 100,\n        }]\n\n        return <MyTable data={this.props.items} columns={columns} />;\n    }\n}\n","import { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { DirectoryItems } from \"./DirectoryItems\";\nimport { CLIEquivalent, GoBackButton } from './uiutil';\n\n\nexport class DirectoryObject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            items: [],\n            isLoading: false,\n            error: null,\n            mountInfo: {},\n            oid: \"\",\n        };\n\n        this.mount = this.mount.bind(this);\n        this.unmount = this.unmount.bind(this);\n        this.browseMounted = this.browseMounted.bind(this);\n        this.copyPath = this.copyPath.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchDirectory(this.props);\n    }\n\n    fetchDirectory(props) {\n        let oid = props.match.params.oid;\n\n        this.setState({\n            isLoading: true,\n            oid: oid,\n        });\n\n        axios.get('/api/v1/objects/' + oid).then(result => {\n            this.setState({\n                items: result.data.entries || [],\n                isLoading: false,\n            });\n        }).catch(error => this.setState({\n            error,\n            isLoading: false\n        }));\n\n        axios.get('/api/v1/mounts/' + oid).then(result => {\n            this.setState({\n                mountInfo: result.data,\n            });\n        }).catch(error => this.setState({\n            mountInfo: {},\n        }));\n    }\n\n    componentWillReceiveProps(props) {\n        this.fetchDirectory(props);\n    }\n\n    mount() {\n        axios.post('/api/v1/mounts', { \"root\": this.state.oid }).then(result => {\n            this.setState({\n                mountInfo: result.data,\n            });\n        }).catch(error => this.setState({\n            mountInfo: {},\n        }));\n    }\n\n    unmount() {\n        axios.delete('/api/v1/mounts/' + this.state.oid).then(result => {\n            this.setState({\n                mountInfo: {},\n            });\n        }).catch(error => this.setState({\n            error: error,\n            mountInfo: {},\n        }));\n    }\n\n    browseMounted() {\n        if (!window.kopiaUI) {\n            alert('Directory browsing is not supported in a web browser. Use Kopia UI.');\n            return;\n        }\n\n        window.kopiaUI.browseDirectory(this.state.mountInfo.path);\n    }\n\n    copyPath() {\n        const el = document.querySelector(\"#mountedPath\");\n        if (!el) {\n            return\n        }\n\n        el.select();\n        el.setSelectionRange(0, 99999);\n\n        document.execCommand(\"copy\");\n    }\n\n    render() {\n        let { items, isLoading, error } = this.state;\n        if (error) {\n            return <p>ERROR: {error.message}</p>;\n        }\n        if (isLoading) {\n            return <Spinner animation=\"border\" variant=\"primary\" />;\n        }\n\n        return <div className=\"padded\">\n            <Row>\n                <Col xs={12}>\n                    <GoBackButton onClick={this.props.history.goBack} />\n                    &nbsp;\n                    {this.state.mountInfo.path ? <>\n                        <Button size=\"sm\" variant=\"info\" onClick={this.unmount} >Unmount</Button>\n                        {window.kopiaUI && <>\n                            &nbsp;\n                            <Button size=\"sm\" variant=\"info\" onClick={this.browseMounted} >Browse</Button>\n                        </>}\n                        &nbsp;<input id=\"mountedPath\" value={this.state.mountInfo.path} />\n                        <Button size=\"sm\" variant=\"primary\" onClick={this.copyPath} ><FontAwesomeIcon icon={faCopy} /></Button>\n                    </> : <>\n                        <Button size=\"sm\" variant=\"primary\" onClick={this.mount} >Mount</Button>\n                    </>}\n                    &nbsp;\n                    <Button size=\"sm\" variant=\"info\" href={\"/snapshots/dir/\" + this.props.match.params.oid + \"/restore\"}>Restore...</Button>\n                </Col>\n            </Row>\n            <Row><Col>&nbsp;</Col>\n            </Row>\n            <Row>\n                <Col xs={12}><DirectoryItems items={items} /></Col>\n            </Row>\n            <CLIEquivalent command={`snapshot list ${this.state.oid}`} />\n        </div>\n    }\n}\n","export default __webpack_public_path__ + \"static/media/kopia-flat.d25132f2.svg\";","import { faUserFriends } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from 'react-router-dom';\nimport { handleChange } from './forms';\nimport MyTable from './Table';\nimport { CLIEquivalent, compare, DirectorySelector, isAbsolutePath, ownerName, policyEditorURL, redirectIfNotConnected } from './uiutil';\n\nconst localPolicies = \"Local Policies\"\nconst allPolicies = \"All Policies\"\nconst globalPolicy = \"Global Policy\"\nconst perUserPolicies = \"Per-User Policies\"\nconst perHostPolicies = \"Per-Host Policies\"\nexport class PoliciesTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            isLoading: false,\n            error: null,\n            editorTarget: null,\n            selectedOwner: localPolicies,\n            policyPath: \"\",\n            sources: [],\n        };\n\n        this.editPolicyForPath = this.editPolicyForPath.bind(this);\n        this.handleChange = handleChange.bind(this);\n        this.fetchPolicies = this.fetchPolicies.bind(this);\n        this.fetchSourcesWithoutSpinner = this.fetchSourcesWithoutSpinner.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n\n        this.fetchPolicies();\n        this.fetchSourcesWithoutSpinner();\n    }\n\n    sync() {\n        this.fetchPolicies();\n\n        axios.post('/api/v1/repo/sync', {}).then(result => {\n            this.fetchSourcesWithoutSpinner();\n        }).catch(error => {\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    fetchPolicies() {\n        axios.get('/api/v1/policies').then(result => {\n            this.setState({\n                items: result.data.policies,\n                isLoading: false,\n            });\n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    fetchSourcesWithoutSpinner() {\n        axios.get('/api/v1/sources').then(result => {\n            this.setState({\n                localSourceName: result.data.localUsername + \"@\" + result.data.localHost,\n                localUsername: result.data.localUsername,\n                localHost: result.data.localHost,\n                multiUser: result.data.multiUser,\n                sources: result.data.sources,\n                isLoading: false,\n            });\n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    editPolicyForPath(e) {\n        e.preventDefault();\n\n        if (!this.state.policyPath) {\n            return;\n        }\n\n        if (!isAbsolutePath(this.state.policyPath)) {\n            alert(\"Policies can only be defined for absolute paths.\");\n            return;\n        }\n\n        this.props.history.push(policyEditorURL({\n            userName: this.state.localUsername,\n            host: this.state.localHost,\n            path: this.state.policyPath,\n        }));\n    }\n\n    selectOwner(h) {\n        this.setState({\n            selectedOwner: h,\n        });\n    }\n\n    policySummary(p) {\n        function isEmpty(obj) {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key))\n                    return false;\n            }\n\n            return true;\n        }\n\n        let bits = [];\n        if (!isEmpty(p.policy.retention)) {\n            bits.push(<><Badge bg=\"success\">retention</Badge>{' '}</>);\n        }\n        if (!isEmpty(p.policy.files)) {\n            bits.push(<><Badge bg=\"primary\">files</Badge>{' '}</>);\n        }\n        if (!isEmpty(p.policy.errorHandling)) {\n            bits.push(<><Badge bg=\"danger\">errors</Badge>{' '}</>);\n        }\n        if (!isEmpty(p.policy.compression)) {\n            bits.push(<><Badge bg=\"secondary\">compression</Badge>{' '}</>);\n        }\n        if (!isEmpty(p.policy.scheduling)) {\n            bits.push(<><Badge bg=\"warning\">scheduling</Badge>{' '}</>);\n        }\n\n        return bits;\n    }\n\n    render() {\n        let { items, sources, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n\n        let uniqueOwners = sources.reduce((a, d) => {\n            const owner = ownerName(d.source);\n\n            if (!a.includes(owner)) { a.push(owner); }\n            return a;\n        }, []);\n\n        uniqueOwners.sort();\n\n        switch (this.state.selectedOwner) {\n            case allPolicies:\n                // do nothing;\n                break;\n\n            case globalPolicy:\n                items = items.filter(x => !x.target.userName && !x.target.host && !x.target.path);\n                break;\n\n            case localPolicies:\n                items = items.filter(x => ownerName(x.target) === this.state.localSourceName && x.target.path.startsWith(this.state.policyPath));\n                break;\n\n            case perUserPolicies:\n                items = items.filter(x => !!x.target.userName && !!x.target.host && !x.target.path);\n                break;\n\n            case perHostPolicies:\n                items = items.filter(x => !x.target.userName && !!x.target.host && !x.target.path);\n                break;\n\n            default:\n                items = items.filter(x => ownerName(x.target) === this.state.selectedOwner);\n                break;\n        };\n\n        items.sort((l,r) => {\n            const hc = compare(l.target.host,r.target.host);\n            if (hc) {\n                return hc;\n            }\n            const uc = compare(l.target.userName,r.target.userName);\n            if (uc) {\n                return uc;\n            }\n            return compare(l.target.path,r.target.path);\n        });\n\n\n        const columns = [{\n            Header: 'Username',\n            accessor: x => x.target.userName || \"*\",\n        }, {\n            Header: 'Host',\n            accessor: x => x.target.host || \"*\",\n        }, {\n            Header: 'Path',\n            accessor: x => x.target.path || \"*\",\n        }, {\n            Header: 'Defined',\n            width: 300,\n            accessor: x => this.policySummary(x),\n        }, {\n            id: 'edit',\n            Header: '',\n            width: 50,\n            Cell: x => <Link to={policyEditorURL(x.row.original.target)}><Button size=\"sm\">Edit</Button></Link>,\n        }]\n\n        return <div className=\"padded\">\n            {!this.state.editorTarget && <div className=\"list-actions\">\n                <Form onSubmit={this.editPolicyForPath}>\n                    <Row>\n                        <Col xs=\"auto\">\n                            <Dropdown>\n                                <Dropdown.Toggle size=\"sm\" variant=\"outline-primary\" id=\"dropdown-basic\">\n                                    <FontAwesomeIcon icon={faUserFriends} />&nbsp;{this.state.selectedOwner}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item onClick={() => this.selectOwner(localPolicies)}>{localPolicies}</Dropdown.Item>\n                                    <Dropdown.Item onClick={() => this.selectOwner(allPolicies)}>{allPolicies}</Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item onClick={() => this.selectOwner(globalPolicy)}>{globalPolicy}</Dropdown.Item>\n                                    <Dropdown.Item onClick={() => this.selectOwner(perUserPolicies)}>{perUserPolicies}</Dropdown.Item>\n                                    <Dropdown.Item onClick={() => this.selectOwner(perHostPolicies)}>{perHostPolicies}</Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    {uniqueOwners.map(v => <Dropdown.Item key={v} onClick={() => this.selectOwner(v)}>{v}</Dropdown.Item>)}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                        {this.state.selectedOwner === localPolicies ? <>\n                            <Col>\n                                <DirectorySelector autoFocus onDirectorySelected={p => this.setState({ policyPath: p })} \n                                placeholder=\"enter directory to find or set policy\"\n                                name=\"policyPath\" value={this.state.policyPath} onChange={this.handleChange} />\n                            </Col>\n                            <Col xs=\"auto\">\n                                <Button disabled={!this.state.policyPath} size=\"sm\" type=\"submit\" onClick={this.editPolicyForPath}>Set Policy</Button>\n                            </Col>\n                        </> : <Col />}\n                    </Row>\n                </Form>\n            </div>}\n\n            {items.length > 0 ? <div>\n                <p>Found {items.length} policies matching criteria.</p>\n                <MyTable data={items} columns={columns} />\n            </div> : ((this.state.selectedOwner === localPolicies && this.state.policyPath) ? <p>\n                No policy found for directory <code>{this.state.policyPath}</code>. Click <b>Set Policy</b> to define it.\n            </p> : <p>No policies found.</p>)}\n            <CLIEquivalent command=\"policy list\" />\n        </div>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupAzure extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"container\", \"storageAccount\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"Container\", \"container\", { autoFocus: true, placeholder: \"enter container name\" })}\n                {OptionalField(this, \"Object Name Prefix\", \"prefix\", { placeholder: \"enter object name prefix or leave empty\" })}\n            </Row>\n            <Row>\n                {RequiredField(this, \"Storage Account\", \"storageAccount\", { placeholder: \"enter access key ID\" })}\n                {OptionalField(this, \"Access Key\", \"storageKey\", { placeholder: \"enter secret access key\", type: \"password\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"Azure Storage Domain\", \"storageDomain\", { placeholder: \"enter storage domain or leave empty for default 'blob.core.windows.net'\" })}\n                {OptionalField(this, \"SAS Token\", \"sasToken\", { placeholder: \"enter secret SAS Token\", type: \"password\" })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupB2 extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"bucket\", \"keyId\", \"key\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"B2 Bucket\", \"bucket\", { autoFocus: true, placeholder: \"enter bucket name\" })}\n            </Row>\n            <Row>\n                {RequiredField(this, \"Key ID\", \"keyId\", { placeholder: \"enter application or account key ID\" })}\n                {RequiredField(this, \"Key\", \"key\", { placeholder: \"enter secret application or account key\", type: \"password\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"Object Name Prefix\", \"prefix\", { placeholder: \"enter object name prefix or leave empty\", type: \"password\" })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, RequiredField, validateRequiredFields } from './forms';\n\n\nexport class SetupFilesystem extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"path\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"Directory Path\", \"path\", { autoFocus: true, placeholder: \"enter path to a directory where to store repository files\" })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredField, validateRequiredFields } from './forms';\n\n\nexport class SetupGCS extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"bucket\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"GCS Bucket\", \"bucket\", { autoFocus: true, placeholder: \"enter bucket name\" })}\n                {OptionalField(this, \"Object Name Prefix\", \"prefix\", { placeholder: \"enter object name prefix or leave empty\", type: \"password\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"Credentials File\", \"credentialsFile\", { placeholder: \"enter name of credentials JSON file\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"Credentials JSON\", \"credentials\", { placeholder: \"paste JSON credentials here\", as: \"textarea\", rows: 5 })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupKopiaServer extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"url\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"Server address\", \"url\", { autoFocus: true, placeholder: \"enter server URL (https://<host>:port)\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"Trusted server certificate fingerprint (SHA256)\", \"serverCertFingerprint\", { placeholder: \"enter trusted server certificate fingerprint printed at server startup\" })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupRclone extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"remotePath\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"Rclone Remote Path\", \"remotePath\", { autoFocus: true, placeholder: \"enter <name-of-rclone-remote>:<path>\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"rclone executable\", \"rcloneExe\", { placeholder: \"enter path to rclone executable\" })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredBoolean, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupS3 extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            \"doNotUseTLS\": false,\n            \"doNotVerifyTLS\": false,\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"bucket\", \"endpoint\", \"accessKeyID\", \"secretAccessKey\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"S3 Bucket\", \"bucket\", { autoFocus: true, placeholder: \"enter bucket name\" })}\n                {RequiredField(this, \"Server Endpoint\", \"endpoint\", { placeholder: \"enter server address (e.g. s3.amazonaws.com)\" })}\n                {OptionalField(this, \"Override S3 Region\", \"region\", { placeholder: \"enter specific region (e.g. us-west-1) or leave empty\" })}\n            </Row>\n            <Row>\n                {RequiredBoolean(this, \"Use HTTP connection (insecure)\", \"doNotUseTLS\")}\n                {RequiredBoolean(this, \"Do not verify TLS certificate\", \"doNotVerifyTLS\")}\n            </Row>\n            <Row>\n                {RequiredField(this, \"Access Key ID\", \"accessKeyID\", { placeholder: \"enter access key ID\" })}\n                {RequiredField(this, \"Secret Access Key\", \"secretAccessKey\", { placeholder: \"enter secret access key\", type: \"password\" })}\n                {OptionalField(this, \"Session Token\", \"sessionToken\", { placeholder: \"enter session token or leave empty\", type: \"password\" })}\n            </Row>\n            <Row>\n                {OptionalField(this, \"Object Name Prefix\", \"prefix\", { placeholder: \"enter object name prefix or leave empty\", type: \"password\" })}\n            </Row>\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, hasExactlyOneOf, OptionalField, OptionalNumberField, RequiredBoolean, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupSFTP extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            port: 22,\n            validated: false,\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        this.setState({\n            validated: true,\n        });\n\n        if (!validateRequiredFields(this, [\"host\", \"port\", \"username\", \"path\"])) {\n            return false;\n        }\n\n        if (this.state.externalSSH) {\n            return true\n        }\n\n        if (!hasExactlyOneOf(this, [\"password\", \"keyfile\", \"keyData\"])) {\n            return false;\n        }\n\n        if (!hasExactlyOneOf(this, [\"knownHostsFile\", \"knownHostsData\"])) {\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"Host\", \"host\", { autoFocus: true, placeholder: \"ssh host name (e.g. example.com)\" })}\n                {RequiredField(this, \"User\", \"username\", { placeholder: \"user name\" })}\n                {OptionalNumberField(this, \"Port\", \"port\", { placeholder: \"port number (e.g. 22)\" })}\n            </Row>\n            <Row>\n                {RequiredField(this, \"Path\", \"path\", { placeholder: \"enter remote path to repository, e.g. '/mnt/data/repository'\" })}\n            </Row>\n            {!this.state.externalSSH && <>\n                <Row>\n                    {OptionalField(this, \"Password\", \"password\", { type: \"password\", placeholder: \"password\" })}\n                </Row>\n                <Row>\n                    {OptionalField(this, \"Path to key file\", \"keyfile\", { placeholder: \"enter path to the key file\" })}\n                    {OptionalField(this, \"Path to known_hosts File\", \"knownHostsFile\", { placeholder: \"enter path to known_hosts file\" })}\n                </Row>\n                <Row>\n                    {OptionalField(this, \"Key Data\", \"keyData\", {\n                        placeholder: \"paste contents of the key file\",\n                        as: \"textarea\",\n                        rows: 5,\n                        isInvalid: this.state.validated && !this.state.externalSSH && !hasExactlyOneOf(this, [\"password\", \"keyfile\", \"keyData\"]),\n                    }, null, <>One of <b>Password</b>, <b>Key File</b> or <b>Key Data</b> is required.</>)}\n                    {OptionalField(this, \"Known Hosts Data\", \"knownHostsData\", {\n                        placeholder: \"paste contents of the known_hosts file\",\n                        as: \"textarea\",\n                        rows: 5,\n                        isInvalid: this.state.validated && !this.state.externalSSH && !hasExactlyOneOf(this, [\"knownHostsFile\", \"knownHostsData\"]),\n                    }, null, <>Either <b>Known Hosts File</b> or <b>Known Hosts Data</b> is required, but not both.</>)}\n                </Row>\n                <hr/>\n            </>}\n            {RequiredBoolean(this, \"Launch external password-less SSH command\", \"externalSSH\", \"By default Kopia connects to the server using internal SSH client which supports limited options. Alternatively it may launch external password-less SSH command, which supports additional options, but is generally less efficient than the built-in client.\")}\n            {this.state.externalSSH && <><Row>\n                {OptionalField(this, \"SSH Command\", \"sshCommand\", { placeholder: \"provide enter passwordless SSH command to execute (typically 'ssh')\" })}\n                {OptionalField(this, \"SSH Arguments\", \"sshArguments\", { placeholder: \"enter SSH command arguments ('user@host -s sftp' will be appended automatically)\" })}\n            </Row></>}\n\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupToken extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"token\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n                {RequiredField(this, \"Token\", \"token\", { autoFocus: true, type: \"password\", placeholder: \"paste connection token\" })}\n            </Row>\n        </>;\n    }\n}\n","import { faAngleDoubleDown, faAngleDoubleUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { handleChange, RequiredBoolean, RequiredField, validateRequiredFields } from './forms';\nimport { SetupAzure } from './SetupAzure';\nimport { SetupB2 } from \"./SetupB2\";\nimport { SetupFilesystem } from './SetupFilesystem';\nimport { SetupGCS } from './SetupGCS';\nimport { SetupKopiaServer } from './SetupKopiaServer';\nimport { SetupRclone } from './SetupRclone';\nimport { SetupS3 } from './SetupS3';\nimport { SetupSFTP } from './SetupSFTP';\nimport { SetupToken } from './SetupToken';\nimport { SetupWebDAV } from './SetupWebDAV';\n\nconst supportedProviders = [\n    { provider: \"filesystem\", description: \"Filesystem\", component: SetupFilesystem },\n    { provider: \"gcs\", description: \"Google Cloud Storage\", component: SetupGCS },\n    { provider: \"s3\", description: \"Amazon S3, Minio, Wasabi, etc.\", component: SetupS3 },\n    { provider: \"b2\", description: \"Backblaze B2\", component: SetupB2 },\n    { provider: \"azureBlob\", description: \"Azure Blob Storage\", component: SetupAzure },\n    { provider: \"sftp\", description: \"SFTP server\", component: SetupSFTP },\n    { provider: \"rclone\", description: \"Rclone remote\", component: SetupRclone },\n    { provider: \"webdav\", description: \"WebDAV server\", component: SetupWebDAV },\n    { provider: \"_server\", description: \"Kopia Repository Server\", component: SetupKopiaServer },\n    { provider: \"_token\", description: \"Use Repository Token\", component: SetupToken },\n];\n\nexport class SetupRepository extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            confirmCreate: false,\n            isLoading: false,\n            showAdvanced: false,\n            storageVerified: false,\n            providerSettings: {},\n            description: \"My Repository\",\n            formatVersion: \"2\",\n        };\n\n        this.handleChange = handleChange.bind(this);\n        this.optionsEditor = React.createRef();\n        this.connectToRepository = this.connectToRepository.bind(this);\n        this.createRepository = this.createRepository.bind(this);\n        this.cancelCreate = this.cancelCreate.bind(this);\n        this.toggleAdvanced = this.toggleAdvanced.bind(this);\n        this.verifyStorage = this.verifyStorage.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('/api/v1/repo/algorithms').then(result => {\n            this.setState({\n                algorithms: result.data,\n                hash: result.data.defaultHash,\n                encryption: result.data.defaultEncryption,\n                splitter: result.data.defaultSplitter,\n                indexVersion: \"\",\n            });\n        });\n        axios.get('/api/v1/current-user').then(result => {\n            this.setState({\n                username: result.data.username,\n                hostname: result.data.hostname,\n            });\n        });\n    }\n\n    validate() {\n        const ed = this.optionsEditor.current;\n\n        let valid = true;\n\n        if (this.state.provider !== \"_token\") {\n            if (!validateRequiredFields(this, [\"password\"])) {\n                valid = false;\n            }\n        }\n\n        if (ed && !ed.validate()) {\n            valid = false;\n        }\n\n        if (this.state.confirmCreate) {\n            if (!validateRequiredFields(this, [\"confirmPassword\"])) {\n                valid = false;\n            }\n\n            if (valid && this.state.password !== this.state.confirmPassword) {\n                alert(\"Passwords don't match\");\n                return false;\n            }\n        }\n\n        return valid;\n    }\n\n    createRepository(e) {\n        e.preventDefault();\n\n        if (!this.validate()) {\n            return;\n        }\n\n        let request = {\n            storage: {\n                type: this.state.provider,\n                config: this.state.providerSettings,\n            },\n            password: this.state.password,\n            options: {\n                blockFormat: {\n                    version: parseInt(this.state.formatVersion),\n                    hash: this.state.hash,\n                    encryption: this.state.encryption,\n                },\n                objectFormat: {\n                    splitter: this.state.splitter,\n                },\n            },\n        };\n\n        request.clientOptions = this.clientOptions();\n\n        axios.post('/api/v1/repo/create', request).then(result => {\n            window.location.replace(\"/\");\n        }).catch(error => {\n            if (error.response.data) {\n                this.setState({\n                    connectError: error.response.data.code + \": \" + error.response.data.error,\n                });\n            }\n        });\n    }\n\n    connectToRepository(e) {\n        e.preventDefault();\n        if (!this.validate()) {\n            return;\n        }\n\n        let request = null;\n        switch (this.state.provider) {\n            case \"_token\":\n                request = {\n                    token: this.state.providerSettings.token,\n                };\n                break;\n\n            case \"_server\":\n                request = {\n                    apiServer: this.state.providerSettings,\n                    password: this.state.password,\n                };\n                break;\n\n            default:\n                request = {\n                    storage: {\n                        type: this.state.provider,\n                        config: this.state.providerSettings,\n                    },\n                    password: this.state.password,\n                };\n                break;\n        }\n\n        request.clientOptions = this.clientOptions();\n\n        this.setState({ isLoading: true });\n        axios.post('/api/v1/repo/connect', request).then(result => {\n            this.setState({ isLoading: false });\n            window.location.replace(\"/\");\n        }).catch(error => {\n            this.setState({ isLoading: false });\n            if (error.response.data) {\n                this.setState({\n                    confirmCreate: false,\n                    connectError: error.response.data.code + \": \" + error.response.data.error,\n                });\n            }\n        });\n    }\n\n    clientOptions() {\n        return {\n            description: this.state.description,\n            username: this.state.username,\n            readonly: this.state.readonly,\n            hostname: this.state.hostname,\n        };\n    }\n\n    toggleAdvanced() {\n        this.setState({ showAdvanced: !this.state.showAdvanced });\n    }\n\n    cancelCreate() {\n        this.setState({ confirmCreate: false });\n    }\n\n    renderProviderSelection() {\n        return <>\n            <h3>Select Storage Type</h3>\n            <p>To connect to a repository or create one, select the preferred storage type.</p>\n            <Row>\n                {supportedProviders.map(x =>\n                    <Button key={x.provider}\n                        data-testid={'provider-' + x.provider}\n                        onClick={() => this.setState({ provider: x.provider, providerSettings: {} })}\n                        variant={x.provider.startsWith(\"_\") ? \"outline-success\" : \"outline-primary\"}\n                        className=\"providerIcon\" >{x.description}</Button>\n                )}\n            </Row>\n        </>;\n    }\n\n    verifyStorage(e) {\n        e.preventDefault();\n\n        const ed = this.optionsEditor.current;\n        if (ed && !ed.validate()) {\n            return;\n        }\n\n        if (this.state.provider === \"_token\" || this.state.provider === \"_server\") {\n            this.setState({\n                // for token and server assume it's verified and exists, if not, will fail in the next step.\n                storageVerified: true,\n                confirmCreate: false,\n                isLoading: false,\n                providerSettings: ed.state,\n            });\n            return;\n        }\n\n        const request = {\n            storage: {\n                type: this.state.provider,\n                config: ed.state,\n            },\n        };\n\n        this.setState({ isLoading: true });\n        axios.post('/api/v1/repo/exists', request).then(result => {\n            this.setState({\n                // verified and exists\n                storageVerified: true,\n                confirmCreate: false,\n                isLoading: false,\n                providerSettings: ed.state,\n            });\n        }).catch(error => {\n            this.setState({ isLoading: false });\n            if (error.response.data) {\n                if (error.response.data.code === \"NOT_INITIALIZED\") {\n                    this.setState({\n                        // verified and does not exist\n                        confirmCreate: true,\n                        storageVerified: true,\n                        providerSettings: ed.state,\n                        connectError: null,\n                    });\n                } else {\n                    this.setState({\n                        connectError: error.response.data.code + \": \" + error.response.data.error,\n                    });\n                }\n            } else {\n                this.setState({\n                    connectError: error.message,\n                });\n            }\n        });\n    }\n\n    renderProviderConfiguration() {\n        let SelectedProvider = null;\n        for (const prov of supportedProviders) {\n            if (prov.provider === this.state.provider) {\n                SelectedProvider = prov.component;\n            }\n        }\n\n        return <Form onSubmit={this.verifyStorage}>\n            {!this.state.provider.startsWith(\"_\") && <h3>Storage Configuration</h3>}\n            {this.state.provider === \"_token\" && <h3>Enter Repository Token</h3>}\n            {this.state.provider === \"_server\" && <h3>Kopia Server Parameters</h3>}\n\n            <SelectedProvider ref={this.optionsEditor} initial={this.state.providerSettings} />\n\n            {this.connectionErrorInfo()}\n            <hr />\n\n            <Button variant=\"secondary\" onClick={() => this.setState({ provider: null, providerSettings: null, connectError: null })}>Back</Button>\n            &nbsp;\n            <Button variant=\"primary\" type=\"submit\" data-testid=\"submit-button\">Next</Button>\n            {this.loadingSpinner()}\n        </Form>;\n    }\n\n    toggleAdvancedButton() {\n        return <Button onClick={this.toggleAdvanced}\n            variant=\"secondary\"\n            aria-controls=\"advanced-options-div\"\n            aria-expanded={this.state.showAdvanced}\n            size=\"sm\"\n        >\n            {!this.state.showAdvanced ? <>\n                <FontAwesomeIcon icon={faAngleDoubleDown} />&nbsp;Show Advanced Options\n                            </> : <>\n                <FontAwesomeIcon icon={faAngleDoubleUp} />&nbsp;Hide Advanced Options\n                            </>}\n        </Button>;\n    }\n\n    renderConfirmCreate() {\n        return <Form onSubmit={this.createRepository}>\n            <h3>Create New Repository</h3>\n            <p>Enter a strong password to create Kopia repository in the provided storage.</p>\n            <Row>\n                {RequiredField(this, \"Repository Password\", \"password\", { autoFocus: true, type: \"password\", placeholder: \"enter repository password\" }, \"The password used to encrypt repository contents.\")}\n                {RequiredField(this, \"Confirm Repository Password\", \"confirmPassword\", { type: \"password\", placeholder: \"enter repository password again\" })}\n            </Row>\n            {this.toggleAdvancedButton()}\n            <Collapse in={this.state.showAdvanced}>\n                <div id=\"advanced-options-div\">\n                    <Row>\n                        <Form.Group as={Col}>\n                            <Form.Label className=\"required\">Encryption</Form.Label>\n                            <Form.Control as=\"select\"\n                                name=\"encryption\"\n                                onChange={this.handleChange}\n                                data-testid=\"control-encryption\"\n                                value={this.state.encryption}>\n                                {this.state.algorithms.encryption.map(x => <option key={x} value={x}>{x}</option>)}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label className=\"required\">Hash Algorithm</Form.Label>\n                            <Form.Control as=\"select\"\n                                name=\"hash\"\n                                onChange={this.handleChange}\n                                data-testid=\"control-hash\"\n                                value={this.state.hash}>\n                                {this.state.algorithms.hash.map(x => <option key={x} value={x}>{x}</option>)}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label className=\"required\">Splitter</Form.Label>\n                            <Form.Control as=\"select\"\n                                name=\"splitter\"\n                                onChange={this.handleChange}\n                                data-testid=\"control-splitter\"\n                                value={this.state.splitter}>\n                                {this.state.algorithms.splitter.map(x => <option key={x} value={x}>{x}</option>)}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label className=\"required\">Repository Format</Form.Label>\n                            <Form.Control as=\"select\"\n                                name=\"formatVersion\"\n                                onChange={this.handleChange}\n                                data-testid=\"control-formatVersion\"\n                                value={this.state.formatVersion}>\n                                    <option value=\"2\">Latest format</option>\n                                    <option value=\"1\">Legacy format compatible with v0.8</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Row>\n                    {this.overrideUsernameHostnameRow()}\n                    <Row>\n                        <Form.Group as={Col}>\n                            <Form.Text>Additional parameters can be set when creating repository using command line</Form.Text>\n                        </Form.Group>\n                    </Row>\n                </div>\n            </Collapse>\n            {this.connectionErrorInfo()}\n            <hr />\n            <Button variant=\"secondary\" onClick={() => this.setState({ storageVerified: false })}>Back</Button>\n            &nbsp;\n            <Button variant=\"success\" type=\"submit\" data-testid=\"submit-button\">Create Repository</Button>\n            {this.loadingSpinner()}\n        </Form>;\n    }\n\n    overrideUsernameHostnameRow() {\n        return <Row>\n            {RequiredField(this, \"Username\", \"username\", {}, \"Override this when restoring snapshot taken by another user.\")}\n            {RequiredField(this, \"Hostname\", \"hostname\", {}, \"Override this when restoring snapshot taken on another machine.\")}\n        </Row>;\n    }\n\n    connectionErrorInfo() {\n        return this.state.connectError && <Row>\n            <Form.Group as={Col}>\n                <Form.Text className=\"error\">Connect Error: {this.state.connectError}</Form.Text>\n            </Form.Group>\n        </Row>;\n    }\n\n    renderConfirmConnect() {\n        return <Form onSubmit={this.connectToRepository}>\n            <h3>Connect To Repository</h3>\n            <Row>\n                <Form.Group as={Col}>\n                    <Form.Label className=\"required\">Connect As</Form.Label>\n                    <Form.Control\n                        value={this.state.username + '@' + this.state.hostname}\n                        readOnly={true}\n                        size=\"sm\" />\n                    <Form.Text className=\"text-muted\">To override, click 'Show Advanced Options'</Form.Text>\n                </Form.Group>\n            </Row>\n            <Row>\n                {(this.state.provider !== \"_token\" && this.state.provider !== \"_server\") && RequiredField(this, \"Repository Password\", \"password\", { autoFocus: true, type: \"password\", placeholder: \"enter repository password\" }, \"The password used to encrypt repository contents.\")}\n                {this.state.provider === \"_server\" && RequiredField(this, \"Server Password\", \"password\", { autoFocus: true, type: \"password\", placeholder: \"enter password to connect to server\" })}\n            </Row>\n            <Row>\n                {RequiredField(this, \"Repository Description\", \"description\", { autoFocus: this.state.provider === \"_token\", placeholder: \"enter repository description\" }, \"Description helps you distinguish between multiple connected repositories.\")}\n            </Row>\n            {this.toggleAdvancedButton()}\n            <Collapse in={this.state.showAdvanced}>\n                <div id=\"advanced-options-div\" className=\"advancedOptions\">\n                    <Row>\n                        {RequiredBoolean(this, \"Connect in read-only mode\", \"readonly\", \"Read-only mode prevents any changes to the repository.\")}\n                    </Row>\n                    {this.overrideUsernameHostnameRow()}\n                </div>\n            </Collapse>\n            {this.connectionErrorInfo()}\n            <hr />\n            <Button variant=\"secondary\" onClick={() => this.setState({ storageVerified: false })}>Back</Button>\n            &nbsp;\n            <Button variant=\"success\" type=\"submit\" data-testid=\"submit-button\">Connect To Repository</Button>\n            {this.loadingSpinner()}\n        </Form>;\n    }\n\n    renderInternal() {\n        if (!this.state.provider) {\n            return this.renderProviderSelection()\n        }\n\n        if (!this.state.storageVerified) {\n            return this.renderProviderConfiguration();\n        }\n\n        if (this.state.confirmCreate) {\n            return this.renderConfirmCreate();\n        }\n\n        return this.renderConfirmConnect();\n    }\n\n    loadingSpinner() {\n        return this.state.isLoading && <Spinner animation=\"border\" variant=\"primary\" />;\n    }\n\n    render() {\n        return <>\n            {this.renderInternal()}\n            {/* <pre className=\"debug-json\">{JSON.stringify(this.state, null, 2)}</pre> */}\n        </>;\n    }\n}\n","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange, OptionalField, RequiredField, validateRequiredFields } from './forms';\n\nexport class SetupWebDAV extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            ...props.initial\n        };\n        this.handleChange = handleChange.bind(this);\n    }\n\n    validate() {\n        return validateRequiredFields(this, [\"url\"])\n    }\n\n    render() {\n        return <>\n            <Row>\n            {RequiredField(this, \"WebDAV Server URL\", \"url\", { autoFocus: true, placeholder: \"http[s]://server:port/path\" })}\n            </Row>\n            <Row>\n            {OptionalField(this, \"Username\", \"username\", { placeholder: \"enter username\" })}\n            {OptionalField(this, \"Password\", \"password\", { placeholder: \"enter password\", type: \"password\" })}\n            </Row>\n        </>;\n    }\n}\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { handleChange } from './forms';\nimport { SetupRepository } from './SetupRepository';\nimport { CLIEquivalent } from './uiutil';\n\nexport class RepoStatus extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            status: {},\n            isLoading: true,\n            error: null,\n            provider: \"\",\n            description: \"\",\n        };\n\n        this.mounted = false;\n        this.disconnect = this.disconnect.bind(this);\n        this.updateDescription = this.updateDescription.bind(this);\n        this.handleChange = handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.fetchStatus(this.props);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    fetchStatus(props) {\n        if (this.mounted) {\n            this.setState({\n                isLoading: true,\n            });\n        }\n\n        axios.get('/api/v1/repo/status').then(result => {\n            if (this.mounted) {\n                this.setState({\n                    status: result.data,\n                    isLoading: false,\n                });\n            }\n        }).catch(error => {\n            if (this.mounted) {\n                this.setState({\n                    error,\n                    isLoading: false\n                })\n            }\n        });\n    }\n\n    disconnect() {\n        this.setState({ isLoading: true })\n        axios.post('/api/v1/repo/disconnect', {}).then(result => {\n            window.location.replace(\"/\");\n        }).catch(error => this.setState({\n            error,\n            isLoading: false\n        }));\n    }\n\n    selectProvider(provider) {\n        this.setState({ provider });\n    }\n\n    updateDescription() {\n        this.setState({\n            isLoading: true\n        });\n\n        axios.post('/api/v1/repo/description', {\n            \"description\": this.state.status.description,\n        }).then(result => {\n            this.setState({\n                isLoading: false,\n            });\n        }).catch(error => {\n            this.setState({\n                isLoading: false,\n            });\n        });\n    }\n\n    render() {\n        let { isLoading, error } = this.state;\n        if (error) {\n            return <p>ERROR: {error.message}</p>;\n        }\n        if (isLoading) {\n            return <Spinner animation=\"border\" variant=\"primary\" />;\n        }\n\n        return this.state.status.connected ?\n            <>\n                <h3>Connected To Repository</h3>\n                <Form onSubmit={this.updateDescription}>\n                    <Row>\n                        <Form.Group as={Col}>\n                            <InputGroup>\n                                <Form.Control\n                                    autoFocus=\"true\"\n                                    isInvalid={!this.state.status.description}\n                                    name=\"status.description\"\n                                    value={this.state.status.description}\n                                    onChange={this.handleChange}\n                                    size=\"sm\" />\n                                &nbsp;\n                                <Button size=\"sm\" type=\"submit\">Update Description</Button>\n                            </InputGroup>\n                            <Form.Control.Feedback type=\"invalid\">Description Is Required</Form.Control.Feedback>\n                        </Form.Group>\n                    </Row>\n                    {this.state.status.readonly && <Row>\n                        <Badge pill variant=\"warning\">Repository is read-only</Badge>\n                    </Row>}\n                </Form>\n                <hr />\n                <Form>\n                    {this.state.status.apiServerURL ? <>\n                        <Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Server URL</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.apiServerURL} />\n                            </Form.Group>\n                        </Row>\n                    </> : <>\n                        <Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Config File</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.configFile} />\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Col}>\n                                <Form.Label>Provider</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.storage} />\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Hash Algorithm</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.hash} />\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Encryption Algorithm</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.encryption} />\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Splitter Algorithm</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.splitter} />\n                            </Form.Group>\n                            <Form.Group as={Col}>\n                                <Form.Label>Internal Compression</Form.Label>\n                                <Form.Control readOnly defaultValue={this.state.status.supportsContentCompression ? \"yes\" : \"no\"} />\n                            </Form.Group>\n                        </Row>\n                    </>}\n                    <Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Connected as:</Form.Label>\n                            <Form.Control readOnly defaultValue={this.state.status.username + \"@\" + this.state.status.hostname} />\n                        </Form.Group>\n                    </Row>\n                    <Row><Col>&nbsp;</Col></Row>\n                    <Row>\n                        <Col>\n                            <Button size=\"sm\" variant=\"danger\" onClick={this.disconnect}>Disconnect</Button>\n                        </Col>\n                    </Row>\n                </Form>\n                <Row><Col>&nbsp;</Col></Row>\n                <Row>\n                    <Col xs={12}>\n                        <CLIEquivalent command=\"repository status\" />\n                    </Col>\n                </Row>\n            </> : <SetupRepository />\n    }\n}\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Link } from \"react-router-dom\";\nimport MyTable from './Table';\nimport { CLIEquivalent, compare, GoBackButton, objectLink, parseQuery, rfc3339TimestampForDisplay, sizeWithFailures, sourceQueryStringParams } from './uiutil';\n\nfunction pillVariant(tag) {\n    if (tag.startsWith(\"latest-\")) {\n        return \"success\";\n    }\n    if (tag.startsWith(\"daily-\")) {\n        return \"info\";\n    }\n    if (tag.startsWith(\"weekly-\")) {\n        return \"danger\";\n    }\n    if (tag.startsWith(\"monthly-\")) {\n        return \"dark\";\n    }\n    if (tag.startsWith(\"annual-\")) {\n        return \"warning\";\n    }\n    return \"primary\";\n}\n\nexport class SnapshotsTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            snapshots: [],\n            showHidden: false,\n            isLoading: false,\n            error: null,\n        };\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidUpdate(oldProps, oldState) {\n        if (this.state.showHidden !== oldState.showHidden) {\n            this.fetchSnapshots();\n        }\n    }\n\n    componentDidMount() {\n        this.fetchSnapshots();\n    }\n\n    fetchSnapshots() {\n        let q = parseQuery(this.props.location.search);\n\n        this.setState({\n            isLoading: true,\n            host: q.host,\n            userName: q.userName,\n            path: q.path,\n            hiddenCount: 0,\n            selectedSnapshot: null,\n        });\n\n        let u = '/api/v1/snapshots?' + sourceQueryStringParams(q);\n\n        if (this.state.showHidden) {\n            u += \"&all=1\";\n        }\n\n        axios.get(u).then(result => {\n            console.log('got snapshots', result.data);\n            this.setState({\n                snapshots: result.data.snapshots,\n                unfilteredCount: result.data.unfilteredCount,\n                uniqueCount: result.data.uniqueCount,\n                isLoading: false,\n            });\n        }).catch(error => this.setState({\n            error,\n            isLoading: false\n        }));\n    }\n\n    selectSnapshot(x) {\n        this.setState({\n            selectedSnapshot: x,\n        })\n    }\n\n    onChange(x) {\n        this.setState({\n            showHidden: x.target.checked,\n        });\n    }\n\n    render() {\n        let { snapshots, unfilteredCount, uniqueCount, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n\n        if (isLoading) {\n            return <Spinner animation=\"border\" variant=\"primary\" />;\n        }\n\n        snapshots.sort((a, b) => -compare(a.startTime, b.startTime));\n\n        const columns = [{\n            id: 'startTime',\n            Header: 'Start time',\n            width: 200,\n            accessor: x => <Link to={objectLink(x.rootID)}>{rfc3339TimestampForDisplay(x.startTime)}</Link>,\n        }, {\n            id: 'rootID',\n            Header: 'Root',\n            width: \"\",\n            accessor: x => x.rootID,\n        }, {\n            Header: 'Retention',\n            accessor: 'retention',\n            width: \"\",\n            Cell: x => <span>{x.cell.value.map(l =>\n                <><Badge bg={pillVariant(l)}>{l}</Badge>{' '}</>\n            )}</span>\n        }, {\n            Header: 'Size',\n            accessor: 'summary.size',\n            width: 100,\n            Cell: x => sizeWithFailures(x.cell.value, x.row.original.summary),\n        }, {\n            Header: 'Files',\n            accessor: 'summary.files',\n            width: 100,\n        }, {\n            Header: 'Dirs',\n            accessor: 'summary.dirs',\n            width: 100,\n        }]\n\n        return <div className=\"padded\">\n            <Row>\n                <Col>\n                    <GoBackButton onClick={this.props.history.goBack} />\n                    &nbsp;\n                    Displaying {snapshots.length !== unfilteredCount ? snapshots.length + ' out of ' + unfilteredCount : snapshots.length} snapshots of&nbsp;<b>{this.state.userName}@{this.state.host}:{this.state.path}</b>\n                    {unfilteredCount !== uniqueCount &&\n                        <>&nbsp;<Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={this.state.showHidden}\n                                label={'Show ' + unfilteredCount + ' individual snapshots'}\n                                onChange={this.onChange} />\n                        </Form.Group></>}\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={12}>\n                    <MyTable data={snapshots} columns={columns} />\n                </Col>\n            </Row>\n\n            <CLIEquivalent command={`snapshot list \"${this.state.userName}@${this.state.host}:${this.state.path}\"${this.state.showHidden ? \" --show-identical\" : \"\"}`} />\n        </div>;\n    }\n}\n","import { faSync, faUserFriends } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Link } from 'react-router-dom';\nimport { handleChange } from './forms';\nimport MyTable from './Table';\nimport { CLIEquivalent, compare, errorAlert, ownerName, policyEditorURL, redirectIfNotConnected, sizeDisplayName, sizeWithFailures, sourceQueryStringParams } from './uiutil';\n\nconst localSnapshots = \"Local Snapshots\"\nconst allSnapshots = \"All Snapshots\"\n\nexport class SourcesTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            sources: [],\n            isLoading: false,\n            isRefreshing: false,\n            error: null,\n\n            localSourceName: \"\",\n            multiUser: false,\n            selectedOwner: localSnapshots,\n            selectedDirectory: \"\",\n        };\n\n        this.sync = this.sync.bind(this);\n        this.fetchSourcesWithoutSpinner = this.fetchSourcesWithoutSpinner.bind(this);\n        this.handleChange = handleChange.bind(this);\n\n        this.cancelSnapshot = this.cancelSnapshot.bind(this);\n        this.startSnapshot = this.startSnapshot.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: true });\n        this.fetchSourcesWithoutSpinner();\n        this.interval = window.setInterval(this.fetchSourcesWithoutSpinner, 3000);\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.interval);\n    }\n\n    fetchSourcesWithoutSpinner() {\n        axios.get('/api/v1/sources').then(result => {\n            this.setState({\n                localSourceName: result.data.localUsername + \"@\" + result.data.localHost,\n                multiUser: result.data.multiUser,\n                sources: result.data.sources,\n                isLoading: false,\n                isRefreshing: false,\n            });\n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isRefreshing: false,\n                isLoading: false,\n            });\n        });\n    }\n\n    selectOwner(h) {\n        this.setState({\n            selectedOwner: h,\n        });\n    }\n\n    sync() {\n        this.setState({ isRefreshing: true });\n        axios.post('/api/v1/repo/sync', {}).then(result => {\n            this.fetchSourcesWithoutSpinner();\n        }).catch(error => {\n            errorAlert(error);\n            this.setState({\n                error,\n                isRefreshing: false\n            });\n        });\n    }\n\n\n    statusCell(x, parent) {\n        switch (x.cell.value) {\n            case \"IDLE\":\n                return <>\n                    <Button variant=\"primary\" size=\"sm\" onClick={() => {\n                        parent.startSnapshot(x.row.original.source);\n                    }}>Snapshot now</Button>\n                    &nbsp;<Link to={policyEditorURL(x.row.original.source)}><Button size=\"sm\" variant=\"info\">Policy</Button></Link>\n                </>;\n\n            case \"PENDING\":\n                return <>\n                    <Spinner animation=\"border\" variant=\"secondary\" size=\"sm\" title=\"Snapshot will after the previous snapshot completes\" />\n                    &nbsp;Pending\n                </>;\n\n            case \"UPLOADING\":\n                let u = x.row.original.upload;\n                let title = \"\";\n                let totals = \"\";\n                if (u) {\n                    title = \" hashed \" + u.hashedFiles + \" files (\" + sizeDisplayName(u.hashedBytes) + \")\\n\" +\n                        \" cached \" + u.cachedFiles + \" files (\" + sizeDisplayName(u.cachedBytes) + \")\\n\" +\n                        \" dir \" + u.directory;\n\n                    const totalBytes = u.hashedBytes + u.cachedBytes;\n\n                    totals = sizeDisplayName(totalBytes);\n                    if (u.estimatedBytes) {\n                        totals += \"/\" + sizeDisplayName(u.estimatedBytes);\n\n                        const percent = Math.round(totalBytes * 1000.0 / u.estimatedBytes) / 10.0;\n                        if (percent <= 100) {\n                            totals += \" \" + percent + \"%\";\n                        }\n                    }\n                }\n\n                return <>\n                    <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" title={title} />&nbsp;{totals}\n                    &nbsp;\n                    {x.row.original.currentTask && <Link to={\"/tasks/\" + x.row.original.currentTask}>Details</Link>}\n                </>;\n\n            default:\n                return \"\";\n        }\n    }\n\n    cancelSnapshot(source) {\n        axios.post('/api/v1/sources/cancel?' + sourceQueryStringParams(source), {}).then(result => {\n            this.fetchSourcesWithoutSpinner();\n        }).catch(error => {\n            errorAlert(error);\n        });\n    }\n\n    startSnapshot(source) {\n        axios.post('/api/v1/sources/upload?' + sourceQueryStringParams(source), {}).then(result => {\n            this.fetchSourcesWithoutSpinner();\n        }).catch(error => {\n            errorAlert(error);\n        });\n    }\n\n    render() {\n        let { sources, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n        if (isLoading) {\n            return <Spinner animation=\"border\" variant=\"primary\" />;\n        }\n\n        let uniqueOwners = sources.reduce((a, d) => {\n            const owner = ownerName(d.source);\n\n            if (!a.includes(owner)) { a.push(owner); }\n            return a;\n        }, []);\n\n        uniqueOwners.sort();\n\n        switch (this.state.selectedOwner) {\n            case allSnapshots:\n                // do nothing;\n                break;\n\n            case localSnapshots:\n                sources = sources.filter(x => ownerName(x.source) === this.state.localSourceName);\n                break;\n\n            default:\n                sources = sources.filter(x => ownerName(x.source) === this.state.selectedOwner);\n                break;\n        };\n\n        const columns = [{\n            id: 'path',\n            Header: 'Path',\n            accessor: x => x.source,\n            sortType: (a, b) => {\n                const v = compare(a.original.source.path, b.original.source.path);\n                if (v !== 0) {\n                    return v;\n                }\n\n                return compare(ownerName(a.original.source), ownerName(b.original.source));\n            },\n            width: \"\",\n            Cell: x => <Link to={'/snapshots/single-source?' + sourceQueryStringParams(x.cell.value)}>{x.cell.value.path}</Link>,\n        }, {\n            id: 'owner',\n            Header: 'Owner',\n            accessor: x => x.source.userName + '@' + x.source.host,\n            width: 250,\n        }, {\n            id: 'lastSnapshotSize',\n            Header: 'Size',\n            width: 120,\n            accessor: x => x.lastSnapshot ? x.lastSnapshot.stats.totalSize : 0,\n            Cell: x => sizeWithFailures(\n                x.cell.value,\n                x.row.original.lastSnapshot && x.row.original.lastSnapshot.rootEntry ? x.row.original.lastSnapshot.rootEntry.summ : null),\n        }, {\n            id: 'lastSnapshotTime',\n            Header: 'Last Snapshot',\n            width: 160,\n            accessor: x => x.lastSnapshot ? x.lastSnapshot.startTime : null,\n            Cell: x => x.cell.value ? <p title={moment(x.cell.value).toLocaleString()}>{moment(x.cell.value).fromNow()}</p> : '',\n        }, {\n            id: 'nextSnapshotTime',\n            Header: 'Next Snapshot',\n            width: 160,\n            accessor: x => x.nextSnapshotTime,\n            Cell: x => (x.cell.value && x.row.original.status !== \"UPLOADING\") ? <>\n                <p title={moment(x.cell.value).toLocaleString()}>{moment(x.cell.value).fromNow()}\n                    {moment(x.cell.value).isBefore(moment()) && <>\n                        &nbsp;\n                    <Badge bg=\"secondary\">overdue</Badge>\n                    </>}\n                </p>\n            </> : '',\n        }, {\n            id: 'status',\n            Header: '',\n            width: 300,\n            accessor: x => x.status,\n            Cell: x => this.statusCell(x, this),\n        }]\n\n        return <div className=\"padded\">\n            <div className=\"list-actions\">\n                <Row>\n                    {this.state.multiUser && <><Col xs=\"auto\">\n                        <Dropdown>\n                            <Dropdown.Toggle size=\"sm\" variant=\"outline-primary\" id=\"dropdown-basic\">\n                                <FontAwesomeIcon icon={faUserFriends} />&nbsp;{this.state.selectedOwner}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => this.selectOwner(localSnapshots)}>{localSnapshots}</Dropdown.Item>\n                                <Dropdown.Item onClick={() => this.selectOwner(allSnapshots)}>{allSnapshots}</Dropdown.Item>\n                                <Dropdown.Divider />\n                                {uniqueOwners.map(v => <Dropdown.Item key={v} onClick={() => this.selectOwner(v)}>{v}</Dropdown.Item>)}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col></>}\n                    <Col xs=\"auto\">\n                        <Button size=\"sm\" variant=\"success\" href=\"/snapshots/new\">New Snapshot</Button>\n                    </Col>\n                    <Col>\n                    </Col>\n                    <Col xs=\"auto\">\n                        <Button size=\"sm\" variant=\"primary\">\n                            {this.state.isRefreshing ? <Spinner animation=\"border\" variant=\"light\" size=\"sm\" /> : <FontAwesomeIcon icon={faSync} onClick={this.sync} />}\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n\n            <MyTable data={sources} columns={columns} />\n            <CLIEquivalent command={`snapshot list`} />\n        </div>;\n    }\n}\n","\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { handleChange } from './forms';\nimport { redirectIfNotConnected } from './uiutil';\n\nexport class TaskLogs extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            isLoading: false,\n            error: null,\n        };\n\n        this.handleChange = handleChange.bind(this);\n        this.fetchLog = this.fetchLog.bind(this);\n        this.interval = window.setInterval(this.fetchLog, 3000);\n        this.messagesEndRef = React.createRef();\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n\n        this.fetchLog();\n        this.scrollToBottom();\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.interval);\n    }\n\n    lastMessage(l) {\n        if (!l || !l.length) {\n            return \"\";\n        }\n\n        return l[l.length - 1].msg;\n    }\n\n    fetchLog() {\n        axios.get('/api/v1/tasks/' + this.props.taskID + \"/logs\").then(result => {\n            let oldLogs = this.state.logs;\n            this.setState({\n                logs: result.data.logs,\n                isLoading: false,\n            });\n            \n            if (this.lastMessage(oldLogs) !== this.lastMessage(result.data.logs)) {\n                this.scrollToBottom();\n            } \n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    fullLogTime(x) {\n        return new Date(x * 1000).toLocaleString();\n    }\n\n    formatLogTime(x) {\n        const d = new Date(x * 1000);\n        let result = \"\";\n\n        result += (\"0\" + d.getHours()).substr(-2);\n        result += \":\";\n        result += (\"0\" + d.getMinutes()).substr(-2);\n        result += \":\";\n        result += (\"0\" + d.getSeconds()).substr(-2);\n        result += \".\";\n        result += (\"00\" + d.getMilliseconds()).substr(-3)\n\n        return result;\n    }\n\n    scrollToBottom() {\n        const c = this.messagesEndRef.current;\n        if (c) {\n            c.scrollIntoView({ behavior: 'smooth' })\n        }\n    }\n\n    render() {\n        const { logs, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n        if (logs) {\n            return <div className=\"logs-table\"><Table size=\"sm\">\n                <tbody>\n                    {logs.map(v => <tr className={'loglevel-' + v.level}>\n                        <td title={this.fullLogTime(v.ts)}>{this.formatLogTime(v.ts)}</td>\n                        <td class=\"elide\">{v.msg}</td></tr>)}\n                </tbody>\n            </Table>\n            <div ref={this.messagesEndRef} />\n            </div>;\n        }\n\n        return null;\n    }\n}\n","\nimport { faChevronCircleDown, faChevronCircleUp, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { TaskLogs } from './TaskLogs';\nimport { cancelTask, formatDuration, GoBackButton, redirectIfNotConnected, sizeDisplayName } from './uiutil';\n\nexport class TaskDetails extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            isLoading: true,\n            error: null,\n            showLog: false,\n        };\n\n        this.taskID = this.taskID.bind(this);\n        this.fetchTask = this.fetchTask.bind(this);\n\n        // poll frequently, we will stop as soon as the task ends.\n        this.interval = window.setInterval(() => this.fetchTask(this.props), 500);\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n\n        this.fetchTask(this.props);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            window.clearInterval(this.interval);\n        }\n    }\n\n    taskID(props) {\n        return props.taskID || props.match.params.tid;\n    }\n\n    fetchTask(props) {\n        axios.get('/api/v1/tasks/' + this.taskID(props)).then(result => {\n            this.setState({\n                task: result.data,\n                isLoading: false,\n            });\n\n            if (result.data.endTime) {\n                window.clearInterval(this.interval);\n                this.interval = null;\n            }\n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        this.fetchTask(props);\n    }\n\n    summaryControl(task) {\n        const dur = formatDuration(task.startTime, task.endTime)\n\n        switch (task.status) {\n\n            case \"SUCCESS\":\n                return <Alert variant=\"success\">Task succeeded after {dur}.</Alert>;\n\n            case \"FAILED\":\n                return <Alert variant=\"danger\"><b>Error:</b> {task.errorMessage}.</Alert>;\n\n            case \"CANCELED\":\n                return <Alert variant=\"warning\">Task canceled.</Alert>;\n\n            case \"CANCELING\":\n                return <Alert variant=\"primary\">\n                    <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" /> Canceling {dur}: {task.progressInfo}.</Alert>;\n\n            default:\n                return <Alert variant=\"primary\">\n                    <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /> Running for {dur}: {task.progressInfo}.</Alert>;\n        }\n    }\n\n    valueThreshold() {\n        if (this.props.showZeroCounters) {\n            return -1;\n        }\n\n        return 0\n    }\n\n    counterBadge(label, c) {\n        if (c.value < this.valueThreshold()) {\n            return \"\";\n        }\n\n        let formatted = c.value.toLocaleString();\n        if (c.units === \"bytes\") {\n            formatted = sizeDisplayName(c.value);\n        }\n\n        let variant = \"secondary\";\n        switch (c.level) {\n            case \"warning\":\n                variant = \"warning\";\n                break;\n            case \"error\":\n                variant = \"danger\";\n                break;\n            case \"notice\":\n                variant = \"info\";\n                break;\n            default:\n                variant = \"secondary\";\n                break;\n        }\n\n        return <Badge key={label} className=\"counter-badge\" bg={variant}>{label}: {formatted}</Badge>\n    }\n\n    counterLevelToSortOrder(l) {\n        switch (l) {\n            case \"error\":\n                return 30\n            case \"notice\":\n                return 10;\n            case \"warning\":\n                return 5;\n            default:\n                return 0;\n        }\n    }\n\n    sortedBadges(counters) {\n        let keys = Object.keys(counters);\n\n        // sort keys by their level and the name alphabetically.\n        keys.sort((a, b) => {\n            if (counters[a].level !== counters[b].level) {\n                return this.counterLevelToSortOrder(counters[b].level) - this.counterLevelToSortOrder(counters[a].level);\n            }\n\n            if (a < b) {\n                return -1;\n            }\n\n            if (a > b) {\n                return 1;\n            }\n\n            return 0;\n        });\n\n        return keys.map(c => (counters[c].value > this.valueThreshold()) && this.counterBadge(c, counters[c]));\n    }\n\n    render() {\n        const { task, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n        return <Form>\n            {this.props.history &&\n                <Row>\n                    <Form.Group>\n                        <GoBackButton onClick={this.props.history.goBack} />\n                        {task.status === \"RUNNING\" && <>\n                            &nbsp;<Button size=\"sm\" variant=\"danger\" onClick={() => cancelTask(task.id)} ><FontAwesomeIcon icon={faStopCircle} /> Stop </Button>\n                        </>}\n                    </Form.Group>\n                </Row>}\n            {!this.props.hideDescription && <Row>\n                <Col xs={3} >\n                    <Form.Group>\n                        <Form.Control type=\"text\" readOnly={true} value={task.kind} />\n                    </Form.Group>\n                </Col>\n                <Col xs={9} >\n                    <Form.Group>\n                        <Form.Control type=\"text\" readOnly={true} value={task.description} />\n                    </Form.Group>\n                </Col>\n            </Row>}\n            <Row>\n                <Col xs={9}>\n                    {this.summaryControl(task)}\n                </Col>\n                <Col xs={3}>\n                    <Form.Group>\n                        <Form.Control type=\"text\" readOnly={true} value={\"Started: \" + new Date(task.startTime).toLocaleString()} />\n                    </Form.Group>\n                </Col>\n            </Row>\n            {task.counters && <Row>\n                <Col>\n                    {this.sortedBadges(task.counters)}\n                </Col>\n            </Row>}\n            <hr />\n            <Row>\n                <Col>\n                    {this.state.showLog ? <>\n                        <Button size=\"sm\" onClick={() => this.setState({ showLog: false })}><FontAwesomeIcon icon={faChevronCircleUp} /> Hide Log</Button>\n                        <TaskLogs taskID={this.taskID(this.props)} />\n                    </> : <Button size=\"sm\" onClick={() => this.setState({ showLog: true })}><FontAwesomeIcon icon={faChevronCircleDown} /> Show Log</Button>}\n                </Col>\n            </Row>\n        </Form>\n            ;\n    }\n}\n","\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from 'react-router-dom';\nimport { handleChange } from './forms';\nimport MyTable from './Table';\nimport { redirectIfNotConnected, taskStatusSymbol } from './uiutil';\n\nexport class TasksTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            isLoading: false,\n            error: null,\n            showKind: \"All\",\n            showStatus: \"All\",\n            uniqueKinds: [],\n        };\n\n        this.handleChange = handleChange.bind(this);\n        this.fetchTasks = this.fetchTasks.bind(this);\n        this.interval = window.setInterval(this.fetchTasks, 3000);\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n\n        this.fetchTasks();\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.interval);\n    }\n\n    getUniqueKinds(tasks) {\n        let o = {};\n\n        for (const tsk of tasks) {\n            o[tsk.kind] = true;\n        }\n\n        let result = [];\n        for (const kind in o) {\n            result.push(kind);\n        }\n\n        return result;\n    }\n\n    fetchTasks() {\n        axios.get('/api/v1/tasks').then(result => {\n            this.setState({\n                items: result.data.tasks,\n                uniqueKinds: this.getUniqueKinds(result.data.tasks),\n                isLoading: false,\n            });\n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    taskMatches(t) {\n        if (this.state.showKind !== \"All\" && t.kind !== this.state.showKind) {\n            return false;\n        }\n\n        if (this.state.showStatus !== \"All\" && t.status.toLowerCase() !== this.state.showStatus.toLowerCase()) {\n            return false;\n        }\n\n        if (this.state.searchDescription && t.description.indexOf(this.state.searchDescription) < 0) {\n            return false;\n        }\n\n        return true\n    }\n\n    filterItems(items) {\n        return items.filter(c => this.taskMatches(c))\n    }\n\n    render() {\n        const { items, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n        const columns = [{\n            Header: 'Start Time',\n            width: 200,\n            accessor: x => <Link to={'/tasks/' + x.id} title={moment(x.startTime).toLocaleString()}>\n                {moment(x.startTime).fromNow()}\n            </Link>\n        }, {\n            Header: 'Status',\n            width: 200,\n            accessor: x => taskStatusSymbol(x),\n        }, {\n            Header: 'Kind',\n            width: \"\",\n            accessor: x => <p>{x.kind}</p>,\n        }, {\n            Header: 'Description',\n            width: \"\",\n            accessor: x => <p>{x.description}</p>,\n        }]\n\n        const filteredItems = this.filterItems(items)\n\n        return <div className=\"padded\">\n            <Form>\n                <div className=\"list-actions\">\n                <Row>\n                    <Col xs=\"auto\">\n                        <Dropdown>\n                            <Dropdown.Toggle size=\"sm\" variant=\"primary\">Status: {this.state.showStatus}</Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => this.setState({ showStatus: \"All\" })}>All</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={() => this.setState({ showStatus: \"Running\" })}>Running</Dropdown.Item>\n                                <Dropdown.Item onClick={() => this.setState({ showStatus: \"Failed\" })}>Failed</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col>\n                    <Col xs=\"auto\">\n                        <Dropdown>\n                            <Dropdown.Toggle size=\"sm\" variant=\"primary\">Kind: {this.state.showKind}</Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => this.setState({ showKind: \"All\" })}>All</Dropdown.Item>\n                                <Dropdown.Divider />\n                                {this.state.uniqueKinds.map(k => <Dropdown.Item onClick={() => this.setState({ showKind: k })}>{k}</Dropdown.Item>)}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col>\n                    <Col xs=\"4\">\n                        <Form.Control size=\"sm\" type=\"text\" name=\"searchDescription\" placeholder=\"search description\" value={this.state.searchDescription} onChange={this.handleChange} autoFocus={true} />\n                    </Col>\n                </Row>\n                </div>\n                <Row>\n                    <Col>\n                        {!items.length ?\n                            <Alert variant=\"info\">\n                                <FontAwesomeIcon size=\"sm\" icon={faInfoCircle} /> A list of tasks will appear here when you create snapshots, restore, run maintenance, etc.\n                        </Alert> : <MyTable data={filteredItems} columns={columns} />}\n                    </Col>\n                </Row>\n            </Form>\n        </div>;\n    }\n}\n","import { faCalendarTimes, faClock, faExclamationTriangle, faFileAlt, faFileArchive, faFolderOpen, faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { handleChange, LogDetailSelector, OptionalBoolean, OptionalNumberField, RequiredBoolean, stateProperty, StringList, TimesOfDayList, valueToNumber } from './forms';\nimport { errorAlert, PolicyEditorLink, sourceQueryStringParams } from './uiutil';\nimport { getDeepStateProperty } from './deepstate';\n\n\nfunction LabelColumn(props) {\n    return <Col xs={12} sm={4} className=\"policyFieldColumn\">\n        <span className=\"policyField\">{props.name}</span>\n        {props.help && <><p className=\"label-help\">{props.help}</p></>}\n    </Col>\n}\n\nfunction ValueColumn(props) {\n    return <Col xs={12} sm={4} className=\"policyValue\">{props.children}</Col>;\n}\n\nfunction WideValueColumn(props) {\n    return <Col xs={12} sm={4} className=\"policyValue\">{props.children}</Col>;\n}\n\nfunction EffectiveValue(component, policyField) {\n    const dsp = getDeepStateProperty(component, \"resolved.definition.\" + policyField, undefined);\n\n    return <EffectiveValueColumn>\n        <Form.Group>\n            <Form.Control\n                data-testid={'effective-' + policyField}\n                size=\"sm\"\n                value={getDeepStateProperty(component, \"resolved.effective.\" + policyField, undefined)}\n                readOnly={true} />\n            <Form.Text data-testid={'definition-' + policyField}>\n                {component.PolicyDefinitionPoint(dsp)}\n            </Form.Text>\n        </Form.Group>\n    </EffectiveValueColumn>;\n}\n\nfunction EffectiveTextAreaValue(component, policyField) {\n    const dsp = getDeepStateProperty(component, \"resolved.definition.\" + policyField, undefined);\n\n    return <EffectiveValueColumn>\n        <Form.Group>\n            <Form.Control\n                data-testid={'effective-' + policyField}\n                size=\"sm\"\n                as=\"textarea\"\n                rows=\"5\"\n                value={getDeepStateProperty(component, \"resolved.effective.\" + policyField, undefined)}\n                readOnly={true} />\n            <Form.Text data-testid={'definition-' + policyField}>\n                {component.PolicyDefinitionPoint(dsp)}\n            </Form.Text>\n        </Form.Group>\n    </EffectiveValueColumn>;\n}\n\nfunction EffectiveBooleanValue(component, policyField) {\n    const dsp = getDeepStateProperty(component, \"resolved.definition.\" + policyField, undefined);\n\n    return <EffectiveValueColumn>\n        <Form.Group>\n            <Form.Check\n                data-testid={'effective-' + policyField}\n                size=\"sm\"\n                checked={getDeepStateProperty(component, \"resolved.effective.\" + policyField, undefined)}\n                readOnly={true} />\n            <Form.Text data-testid={'definition-' + policyField}>\n                {component.PolicyDefinitionPoint(dsp)}\n            </Form.Text>\n        </Form.Group>\n    </EffectiveValueColumn>;\n}\n\nfunction EffectiveValueColumn(props) {\n    return <Col xs={12} sm={4} className=\"policyEffectiveValue\">{props.children}</Col>;\n}\n\nfunction UpcomingSnapshotTimes(times) {\n    if (!times) {\n        return <LabelColumn name=\"No upcoming snapshots\" />\n    }\n\n    return <>\n        <LabelColumn name-=\"Upcoming\" />\n\n        <ul data-testid=\"upcoming-snapshot-times\">\n            {times.map(x => <li key={x}>{moment(x).format('L LT')} ({moment(x).fromNow()})</li>)}\n        </ul>\n    </>;\n}\n\nfunction SectionHeaderRow() {\n    return <Row>\n        <LabelColumn />\n        <ValueColumn><div className=\"policyEditorHeader\"></div></ValueColumn>\n        <EffectiveValueColumn><div className=\"policyEditorHeader\">Effective</div></EffectiveValueColumn>\n    </Row>;\n}\n\nexport class PolicyEditor extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            isLoading: false,\n            error: null,\n        };\n\n        this.fetchPolicy = this.fetchPolicy.bind(this);\n        this.handleChange = handleChange.bind(this);\n        this.saveChanges = this.saveChanges.bind(this);\n        this.isGlobal = this.isGlobal.bind(this);\n        this.deletePolicy = this.deletePolicy.bind(this);\n        this.policyURL = this.policyURL.bind(this);\n        this.resolvePolicy = this.resolvePolicy.bind(this);\n        this.PolicyDefinitionPoint = this.PolicyDefinitionPoint.bind(this);\n        this.getAndValidatePolicy = this.getAndValidatePolicy.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('/api/v1/repo/algorithms').then(result => {\n            this.setState({\n                algorithms: result.data,\n            });\n\n            this.fetchPolicy(this.props);\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (sourceQueryStringParams(this.props) !== sourceQueryStringParams(prevProps)) {\n            this.fetchPolicy(this.props);\n        }\n\n        const pjs = JSON.stringify(this.state.policy);\n        if (pjs !== this.lastResolvedPolicy) {\n            this.resolvePolicy(this.props);\n            this.lastResolvedPolicy = pjs;\n        }\n    }\n\n    fetchPolicy(props) {\n        axios.get(this.policyURL(props)).then(result => {\n            this.setState({\n                isLoading: false,\n                policy: result.data,\n            });\n        }).catch(error => {\n            if (error.response && error.response.data.code !== \"NOT_FOUND\") {\n                this.setState({\n                    error: error,\n                    isLoading: false\n                })\n            } else {\n                this.setState({\n                    policy: {},\n                    isNew: true,\n                    isLoading: false\n                })\n            }\n        });\n    }\n\n    resolvePolicy(props) {\n        const u = '/api/v1/policy/resolve?' + sourceQueryStringParams(props);\n\n        try {\n            axios.post(u, {\n                \"updates\": this.getAndValidatePolicy(),\n                \"numUpcomingSnapshotTimes\": 5,\n            }).then(result => {\n                this.setState({ resolved: result.data });\n            }).catch(error => {\n            });\n        }\n        catch (e) {\n        }\n    }\n\n    PolicyDefinitionPoint(p) {\n        if (!p) {\n            return \"\";\n        }\n\n        if (p.userName === this.props.userName && p.host === this.props.host && p.path === this.props.path) {\n            return \"(Defined by this policy)\";\n        }\n\n        return <>Defined by {PolicyEditorLink(p)}</>;\n    }\n\n    getAndValidatePolicy() {\n        function removeEmpty(l) {\n            if (!l) {\n                return l;\n            }\n\n            let result = [];\n            for (let i = 0; i < l.length; i++) {\n                const s = l[i];\n                if (s === \"\") {\n                    continue;\n                }\n\n                result.push(s);\n            }\n\n            return result;\n        }\n\n        function validateTimesOfDay(l) {\n            for (const tod of l) {\n                if (!tod.hour) {\n                    // unparsed\n                    throw Error(\"invalid time of day: '\" + tod + \"'\")\n                }\n            }\n\n            return l;\n        }\n\n        // clone and clean up policy before saving\n        let policy = JSON.parse(JSON.stringify(this.state.policy));\n        if (policy.files) {\n            if (policy.files.ignore) {\n                policy.files.ignore = removeEmpty(policy.files.ignore)\n            }\n            if (policy.files.ignoreDotFiles) {\n                policy.files.ignoreDotFiles = removeEmpty(policy.files.ignoreDotFiles)\n            }\n        }\n\n        if (policy.compression) {\n            if (policy.compression.onlyCompress) {\n                policy.compression.onlyCompress = removeEmpty(policy.compression.onlyCompress)\n            }\n            if (policy.compression.neverCompress) {\n                policy.compression.neverCompress = removeEmpty(policy.compression.neverCompress)\n            }\n        }\n\n        if (policy.scheduling) {\n            if (policy.scheduling.timeOfDay) {\n                policy.scheduling.timeOfDay = validateTimesOfDay(removeEmpty(policy.scheduling.timeOfDay));\n            }\n        }\n\n        return policy;\n    }\n\n    saveChanges(e) {\n        e.preventDefault()\n\n        try {\n            const policy = this.getAndValidatePolicy();\n\n            this.setState({ saving: true });\n            axios.put(this.policyURL(this.props), policy).then(result => {\n                this.props.close();\n            }).catch(error => {\n                this.setState({ saving: false });\n                errorAlert(error, 'Error saving policy');\n            });\n        } catch (e) {\n            errorAlert(e);\n            return\n        }\n    }\n\n    deletePolicy() {\n        if (window.confirm('Are you sure you want to delete this policy?')) {\n            this.setState({ saving: true });\n\n            axios.delete(this.policyURL(this.props)).then(result => {\n                this.props.close();\n            }).catch(error => {\n                this.setState({ saving: false });\n                errorAlert(error, 'Error deleting policy');\n            });\n        }\n    }\n\n    policyURL(props) {\n        return '/api/v1/policy?' + sourceQueryStringParams(props);\n    }\n\n    isGlobal() {\n        return !this.props.host && !this.props.userName && !this.props.path;\n    }\n\n    render() {\n        const { isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n        return <div className=\"padded\">\n            <Form onSubmit={this.saveChanges}>\n                <Accordion defaultActiveKey=\"scheduling\">\n                    <Accordion.Item eventKey=\"retention\">\n                        <Accordion.Header><FontAwesomeIcon icon={faCalendarTimes} />&nbsp;Snapshot Retention</Accordion.Header>\n                        <Accordion.Body>\n                            <SectionHeaderRow />\n                            <Row>\n                                <LabelColumn name=\"Latest Snapshots\" help=\"Number of the most recent snapshots to retain per source.\" />\n                                <ValueColumn>{OptionalNumberField(this, null, \"policy.retention.keepLatest\", { placeholder: \"# of latest snapshots\" })}</ValueColumn>\n                                {EffectiveValue(this, \"retention.keepLatest\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Hourly\" help=\"How many hourly snapshots to retain per source. The latest snapshot from each hour will be retained.\" />\n                                <ValueColumn>{OptionalNumberField(this, null, \"policy.retention.keepHourly\", { placeholder: \"# of hourly snapshots\" })}</ValueColumn>\n                                {EffectiveValue(this, \"retention.keepHourly\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Daily\" help=\"How many daily snapshots to retain per source. The latest snapshot from each day will be retained.\" />\n                                <ValueColumn>{OptionalNumberField(this, null, \"policy.retention.keepDaily\", { placeholder: \"# of daily snapshots\" })}</ValueColumn>\n                                {EffectiveValue(this, \"retention.keepDaily\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Weekly\" help=\"How many weekly snapshots to retain per source. The latest snapshot from each week will be retained.\" />\n                                <ValueColumn>{OptionalNumberField(this, null, \"policy.retention.keepWeekly\", { placeholder: \"# of weekly snapshots\" })}</ValueColumn>\n                                {EffectiveValue(this, \"retention.keepWeekly\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Monthly\" help=\"How many monthly snapshots to retain per source. The latest snapshot from each calendar month will be retained.\" />\n                                <ValueColumn>{OptionalNumberField(this, null, \"policy.retention.keepMonthly\", { placeholder: \"# of monthly snapshots\" })}</ValueColumn>\n                                {EffectiveValue(this, \"retention.keepMonthly\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Annual\" help=\"How many annual snapshots to retain per source. The latest snapshot from each calendar year will be retained.\" />\n                                <ValueColumn>{OptionalNumberField(this, null, \"policy.retention.keepAnnual\", { placeholder: \"# of annual snapshots\" })}</ValueColumn>\n                                {EffectiveValue(this, \"retention.keepAnnual\")}\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"files\">\n                        <Accordion.Header><FontAwesomeIcon icon={faFolderOpen} />&nbsp;Files</Accordion.Header>\n                        <Accordion.Body>\n                            <SectionHeaderRow />\n                            <Row>\n                                <LabelColumn name=\"Ignore Files\" help=\"List of file and directory names to ignore. The patterns should be specified as relative to the directory they are defined in and not absolute. Wilcards are allowed.\" />\n                                <WideValueColumn>{StringList(this, \"policy.files.ignore\")}</WideValueColumn>\n                                {EffectiveTextAreaValue(this, \"files.ignore\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Ignore Rules From Parent Directories\" help=\"When set, ignore rules from the parent directory are ignored.\" />\n                                <ValueColumn>{RequiredBoolean(this, \"\", \"policy.files.noParentIgnore\")}</ValueColumn>\n                                <EffectiveValueColumn />\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Ignore Rule Files\" help=\"List of additional files containing ignore rules. Each file configures ignore rules for the directory and its subdirectories.\" />\n                                <ValueColumn>{StringList(this, \"policy.files.ignoreDotFiles\")}</ValueColumn>\n                                {EffectiveTextAreaValue(this, \"files.ignoreDotFiles\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Ignore Rule Files From Parent Directories\" help=\"When set, the files specifying ignore rules (.kopiaignore, etc.) from the parent directory are ignored.\" />\n                                <ValueColumn>{RequiredBoolean(this, \"\", \"policy.files.noParentDotFiles\")}</ValueColumn>\n                                <EffectiveValueColumn />\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Ignore Well-Known Cache Directories\" help=\"Ignore directories containing CACHEDIR.TAG and similar.\" />\n                                <ValueColumn>{OptionalBoolean(this, null, \"policy.files.ignoreCacheDirs\", \"inherit from parent\")}</ValueColumn>\n                                {EffectiveBooleanValue(this, \"files.ignoreCacheDirs\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Scan only one filesystem\" help=\"Do not cross filesystem boundaries when snapshotting.\" />\n                                <ValueColumn>{OptionalBoolean(this, null, \"policy.files.oneFileSystem\", \"inherit from parent\")}</ValueColumn>\n                                {EffectiveBooleanValue(this, \"files.oneFileSystem\")}\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"errors\">\n                        <Accordion.Header><FontAwesomeIcon icon={faExclamationTriangle} />&nbsp;Error Handling</Accordion.Header>\n                        <Accordion.Body>\n                            <SectionHeaderRow />\n                            <Row>\n                                <LabelColumn name=\"Ignore Directory Errors\" help=\"Treat directory read errors as non-fatal.\" />\n                                <ValueColumn>{OptionalBoolean(this, null, \"policy.errorHandling.ignoreDirectoryErrors\", \"inherit from parent\")}</ValueColumn>\n                                {EffectiveBooleanValue(this, \"errorHandling.ignoreDirectoryErrors\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Ignore File Errors\" help=\"Treat file read errors as non-fatal.\" />\n                                <ValueColumn>{OptionalBoolean(this, null, \"policy.errorHandling.ignoreFileErrors\", \"inherit from parent\")}</ValueColumn>\n                                {EffectiveBooleanValue(this, \"errorHandling.ignoreFileErrors\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Ignore Unknown Directory Entries\" help=\"Treat unrecognized/unsupported directory entries as non-fatal errors.\" />\n                                <ValueColumn>{OptionalBoolean(this, null, \"policy.errorHandling.ignoreUnknownTypes\", \"inherit from parent\")}</ValueColumn>\n                                {EffectiveBooleanValue(this, \"errorHandling.ignoreUnknownTypes\")}\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"compression\">\n                        <Accordion.Header><FontAwesomeIcon icon={faFileArchive} />&nbsp;Compression</Accordion.Header>\n                        <Accordion.Body>\n                            <SectionHeaderRow />\n                            <Row>\n                                <LabelColumn name=\"Compression Algorithm\" help=\"Specify compression algorithm to use when snapshotting files in this directory and subdirectories.\" />\n                                <WideValueColumn>\n                                    <Form.Control as=\"select\" size=\"sm\"\n                                        name=\"policy.compression.compressorName\"\n                                        onChange={this.handleChange}\n                                        value={stateProperty(this, \"policy.compression.compressorName\")}>\n                                        <option value=\"\">(none)</option>\n                                        {this.state.algorithms && this.state.algorithms.compression.map(x => <option key={x} value={x}>{x}</option>)}\n                                    </Form.Control>\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"compression.compressorName\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Minimum File Size\" help=\"Files whose size is below the provided value will not be compressed.\" />\n                                <ValueColumn>{OptionalNumberField(this, \"\", \"policy.compression.minSize\", { placeholder: \"minimum file size in bytes\" })}</ValueColumn>\n                                {EffectiveValue(this, \"compression.minSize\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Max File Size\" help=\"Files whose size exceeds the provided value will not be compressed.\" />\n                                <ValueColumn>{OptionalNumberField(this, \"\", \"policy.compression.maxSize\", { placeholder: \"maximum file size in bytes\" })}</ValueColumn>\n                                {EffectiveValue(this, \"compression.maxSize\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Only Compress Extensions\" help=\"Only compress files with the following file extensions (one extension per line)\" />\n                                <WideValueColumn>\n                                    {StringList(this, \"policy.compression.onlyCompress\")}\n                                </WideValueColumn>\n                                {EffectiveTextAreaValue(this, \"compression.onlyCompress\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Never Compress Extensions\" help=\"Never compress the following file extensions (one extension per line)\" />\n                                <WideValueColumn>\n                                    {StringList(this, \"policy.compression.neverCompress\")}\n                                </WideValueColumn>\n                                {EffectiveTextAreaValue(this, \"compression.neverCompress\")}\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"scheduling\">\n                        <Accordion.Header><FontAwesomeIcon icon={faClock} />&nbsp;Scheduling</Accordion.Header>\n                        <Accordion.Body>\n                            <SectionHeaderRow />\n                            <Row>\n                                <LabelColumn name=\"Snapshot Frequency\" help=\"How frequently to create snapshots in KopiaUI or kopia server. This option has no effect outside of the server mode.\" />\n                                <WideValueColumn>\n                                    <Form.Control as=\"select\" size=\"sm\"\n                                        name=\"policy.scheduling.intervalSeconds\"\n                                        onChange={e => this.handleChange(e, valueToNumber)}\n                                        value={stateProperty(this, \"policy.scheduling.intervalSeconds\")}>\n                                        <option value=\"\">(none)</option>\n                                        <option value=\"600\">every 10 minutes</option>\n                                        <option value=\"900\">every 15 minutes</option>\n                                        <option value=\"1200\">every 20 minutes</option>\n                                        <option value=\"1800\">every 30 minutes</option>\n                                        <option value=\"3600\">every hour</option>\n                                        <option value=\"10800\">every 3 hours</option>\n                                        <option value=\"21600\">every 6 hours</option>\n                                        <option value=\"43200\">every 12 hours</option>\n                                    </Form.Control>\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"scheduling.intervalSeconds\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Times Of Day\" help=\"Create snapshots at the provided times of day, one per line, 24h time (e.g. 17:00,18:00)\" />\n                                <ValueColumn>\n                                    {TimesOfDayList(this, \"policy.scheduling.timeOfDay\")}\n                                </ValueColumn>\n                                {EffectiveBooleanValue(this, \"scheduling.manual\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Manual Snapshots Only\" help=\"Only create snapshots manually (disables scheduled snapshots).\" />\n                                <ValueColumn>\n                                    {OptionalBoolean(this, \"\", \"policy.scheduling.manual\", \"inherit from parent\")}\n                                </ValueColumn>\n                                {EffectiveBooleanValue(this, \"scheduling.manual\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Upcoming Snapshots\" help=\"Times of upcoming snapshots calculated based on policy parameters.\" />\n                                <ValueColumn>\n                                </ValueColumn>\n                                <EffectiveValueColumn>\n                                    {UpcomingSnapshotTimes(this.state?.resolved?.upcomingSnapshotTimes)}\n                                </EffectiveValueColumn>\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"logging\">\n                        <Accordion.Header><FontAwesomeIcon icon={faFileAlt} />&nbsp;Logging</Accordion.Header>\n                        <Accordion.Body>\n                            <SectionHeaderRow />\n                            <Row>\n                                <LabelColumn name=\"Directory Snapshotted\" help=\"Log verbosity when a directory is snapshotted.\" />\n                                <WideValueColumn>\n                                    {LogDetailSelector(this, \"policy.logging.directories.snapshotted\")}\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"logging.directories.snapshotted\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Directory Ignored\" help=\"Log verbosity when a directory is ignored.\" />\n                                <WideValueColumn>\n                                    {LogDetailSelector(this, \"policy.logging.directories.ignored\")}\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"logging.directories.ignored\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"File Snapshotted\" help=\"Log verbosity when a file, symbolic link, etc. is snapshotted.\" />\n                                <WideValueColumn>\n                                    {LogDetailSelector(this, \"policy.logging.entries.snapshotted\")}\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"logging.entries.snapshotted\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"File Ignored\" help=\"Log verbosity when a file, symbolic link, etc. is ignored.\" />\n                                <WideValueColumn>\n                                    {LogDetailSelector(this, \"policy.logging.entries.ignored\")}\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"logging.entries.ignored\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Cache Hit\" help=\"Log verbosity when an cache is used instead of uploading the file.\" />\n                                <WideValueColumn>\n                                    {LogDetailSelector(this, \"policy.logging.entries.cacheHit\")}\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"logging.entries.cacheHit\")}\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"Cache Miss\" help=\"Log verbosity when an cache cannot be used and a file must be hashed.\" />\n                                <WideValueColumn>\n                                    {LogDetailSelector(this, \"policy.logging.entries.cacheHit\")}\n                                </WideValueColumn>\n                                {EffectiveValue(this, \"logging.entries.cacheMiss\")}\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                    <Accordion.Item eventKey=\"other\">\n                        <Accordion.Header><FontAwesomeIcon icon={faMagic} />&nbsp;Other</Accordion.Header>\n                        <Accordion.Body>\n                            <Row>\n                                <LabelColumn name=\"Disable Parent Policy Evaluation\" help=\"prevents any parent policies from affecting this directory and subdirectories\" />\n                                <ValueColumn>\n                                    {RequiredBoolean(this, \"\", \"policy.noParent\")}\n                                </ValueColumn>\n                            </Row>\n                            <Row>\n                                <LabelColumn name=\"JSON Representation\" help=\"This is the internal representation of a policy.\" />\n                                <WideValueColumn>\n                                    <pre className=\"debug-json\">{JSON.stringify(this.state.policy, null, 4)}\n                                    </pre>\n                                </WideValueColumn>\n                            </Row>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n\n                {!this.props.embedded && <Button size=\"sm\" variant=\"success\" type=\"submit\" onClick={this.saveChanges} data-testid=\"button-save\" disabled={this.state.saving}>Save Policy</Button>}\n                {!this.state.isNew && !this.props.embedded && <>&nbsp;\n                    <Button size=\"sm\" variant=\"danger\" disabled={this.isGlobal() || this.state.saving} onClick={this.deletePolicy}>Delete Policy</Button>\n                </>}\n                {this.state.saving && <>\n                    &nbsp;\n                    <Spinner animation=\"border\" variant=\"primary\" size=\"sm\" />\n                </>}\n                {/* <pre className=\"debug-json\">{JSON.stringify(this.state, null, 4)}\n                </pre> */}\n            </Form>\n        </div>;\n    }\n}\n","\nimport { faChevronCircleDown, faChevronCircleUp, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport Form from 'react-bootstrap/Form';\nimport { TaskLogs } from './TaskLogs';\nimport { cancelTask, redirectIfNotConnected, sizeDisplayName } from './uiutil';\n\nexport class EstimateResults extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoading: true,\n            error: null,\n            showLog: false,\n        };\n\n        this.taskID = this.taskID.bind(this);\n        this.fetchTask = this.fetchTask.bind(this);\n\n        // poll frequently, we will stop as soon as the task ends.\n        this.interval = window.setInterval(() => this.fetchTask(this.props), 500);\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n\n        this.fetchTask(this.props);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            window.clearInterval(this.interval);\n        }\n    }\n\n    taskID(props) {\n        return props.taskID || props.match.params.tid;\n    }\n\n    fetchTask(props) {\n        axios.get('/api/v1/tasks/' + this.taskID(props)).then(result => {\n            this.setState({\n                task: result.data,\n                isLoading: false,\n            });\n\n            if (result.data.endTime) {\n                window.clearInterval(this.interval);\n                this.interval = null;\n            }\n        }).catch(error => {\n            redirectIfNotConnected(error);\n            this.setState({\n                error,\n                isLoading: false\n            });\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            this.fetchTask(this.props);\n        }\n    }\n\n    taskStatusDescription(task) {\n        if (task.status === \"RUNNING\") {\n            return <><Spinner animation=\"border\" variant=\"primary\" size=\"sm\" /></>\n        }\n        \n        if (task.status === \"SUCCESS\") {\n            return \"Total\"\n        }\n\n        if (task.status === \"CANCELED\") {\n            return \"(Canceled)\"\n        }\n\n        return task.status;\n    }\n\n    render() {\n        const { task, isLoading, error } = this.state;\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n        return <>\n            {task.counters && <Form.Text className=\"estimateResults\">\n                {this.taskStatusDescription(task)} Bytes: <b>{sizeDisplayName(task.counters[\"Bytes\"]?.value)}</b> (<b>{sizeDisplayName(task.counters[\"Excluded Bytes\"]?.value)}</b> excluded) \n                Files: <b>{task.counters[\"Files\"]?.value}</b> (<b>{task.counters[\"Excluded Files\"]?.value}</b> excluded) \n                Directories: <b>{task.counters[\"Directories\"]?.value}</b> (<b>{task.counters[\"Excluded Directories\"]?.value}</b> excluded) \n                Errors: <b>{task.counters[\"Errors\"]?.value}</b> (<b>{task.counters[\"Ignored Errors\"]?.value}</b> ignored) \n                </Form.Text>\n            }\n                    {task.status === \"RUNNING\" && <>\n                            &nbsp;<Button size=\"sm\" variant=\"light\" onClick={() => cancelTask(task.id)} ><FontAwesomeIcon icon={faStopCircle} color=\"red\" /> Cancel </Button>\n                        </>}\n                    {this.state.showLog ? <>\n                        <Button size=\"sm\" variant=\"light\" onClick={() => this.setState({ showLog: false })}><FontAwesomeIcon icon={faChevronCircleUp} /> Hide Log</Button>\n                        <TaskLogs taskID={this.taskID(this.props)} />\n                    </> : <Button size=\"sm\" variant=\"light\" onClick={() => this.setState({ showLog: true })}><FontAwesomeIcon icon={faChevronCircleDown} /> Show Log</Button>}\n        </>\n            ;\n    }\n}\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { handleChange } from './forms';\nimport { PolicyEditor } from './PolicyEditor';\nimport { EstimateResults } from './EstimateResults';\nimport { CLIEquivalent, DirectorySelector, errorAlert, GoBackButton, redirectIfNotConnected } from './uiutil';\n\nexport class NewSnapshot extends Component {\n    constructor() {\n        super();\n        this.state = {\n            path: \"\",\n            estimateTaskID: null,\n            estimateTaskVisible: false,\n            lastEstimatedPath: \"\",\n            policyEditorVisibleFor: \"n/a\",\n            localUsername: null,\n        };\n\n        this.policyEditorRef = React.createRef();\n        this.handleChange = handleChange.bind(this);\n        this.estimate = this.estimate.bind(this);\n        this.snapshotNow = this.snapshotNow.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('/api/v1/sources').then(result => {\n            this.setState({\n                localUsername: result.data.localUsername,\n                localHost: result.data.localHost,\n            });\n        }).catch(error => {\n            redirectIfNotConnected(error);\n        });\n    }\n\n    componentDidUpdate() {\n        if (this.state.lastResolvedPath !== this.state.path) {\n            axios.post('/api/v1/paths/resolve', { path: this.state.path }).then(result => {\n                this.setState({\n                    lastResolvedPath: this.state.path,\n                    resolvedSource: result.data.source,\n                });\n            }).catch(error => {\n                redirectIfNotConnected(error);\n            });\n        }\n\n        if (this.state.estimateTaskVisible && this.state.lastEstimatedPath !== this.state.resolvedSource.path) {\n            this.setState({\n                estimateTaskVisible: false,\n            })\n        }\n    }\n\n    estimate(e) {\n        e.preventDefault();\n\n        if (!this.state.resolvedSource.path) {\n            return;\n        }\n\n        const pe = this.policyEditorRef.current;\n        if (!pe) {\n            return;\n        }\n\n        try {\n            let req = {\n                root: this.state.resolvedSource.path,\n                maxExamplesPerBucket: 10,\n                policyOverride: pe.getAndValidatePolicy(),\n            }\n\n            axios.post('/api/v1/estimate', req).then(result => {\n                this.setState({\n                    lastEstimatedPath: this.state.resolvedSource.path,\n                    estimateTaskID: result.data.id,\n                    estimatingPath: result.data.description,\n                    estimateTaskVisible: true,\n                    didEstimate: false,\n                })\n            }).catch(error => {\n                errorAlert(error);\n            });\n        } catch (e) {\n            errorAlert(e);\n        }\n    }\n\n    snapshotNow(e) {\n        e.preventDefault();\n\n        if (!this.state.resolvedSource.path) {\n            alert('Must specify directory to snapshot.');\n            return\n        }\n\n        const pe = this.policyEditorRef.current;\n        if (!pe) {\n            return;\n        }\n\n        try {\n            axios.post('/api/v1/sources', {\n                path: this.state.resolvedSource.path,\n                createSnapshot: true,\n                policy: pe.getAndValidatePolicy(),\n            }).then(result => {\n                this.props.history.goBack();\n            }).catch(error => {\n                errorAlert(error);\n\n                this.setState({\n                    error,\n                    isLoading: false\n                });\n            });\n        } catch (e) {\n            errorAlert(e);\n        }\n    }\n\n    render() {\n        return <>\n            <Row>\n                <Form.Group>\n                    <GoBackButton onClick={this.props.history.goBack} />\n                </Form.Group>\n                &nbsp;&nbsp;&nbsp;<h4>New Snapshot</h4>\n            </Row>\n            <br />\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <DirectorySelector onDirectorySelected={p => this.setState({ path: p })} autoFocus placeholder=\"enter path to snapshot\" name=\"path\" value={this.state.path} onChange={this.handleChange} />\n                    </Form.Group>\n                </Col>\n                <Col xs=\"auto\">\n                    <Button\n                        size=\"sm\"\n                        disabled={!this.state.resolvedSource?.path}\n                        title=\"Estimate\"\n                        variant=\"primary\"\n                        onClick={this.estimate}>Estimate</Button>\n                    &nbsp;\n                    <Button size=\"sm\"\n                        disabled={!this.state.resolvedSource?.path}\n                        title=\"Snapshot Now\"\n                        variant=\"success\"\n                        onClick={this.snapshotNow}>Snapshot Now</Button>\n                </Col>\n            </Row>\n            {this.state.estimateTaskID && this.state.estimateTaskVisible &&\n                <EstimateResults taskID={this.state.estimateTaskID} hideDescription={true} showZeroCounters={true} />\n            }\n            <br />\n\n            {this.state.resolvedSource && <Row><Col xs={12}>\n                <Form.Text>\n                    {this.state.resolvedSource ? this.state.resolvedSource.path : this.state.path}\n                </Form.Text>\n\n                <PolicyEditor ref={this.policyEditorRef}\n                    embedded\n                    host={this.state.resolvedSource.host}\n                    userName={this.state.resolvedSource.userName}\n                    path={this.state.resolvedSource.path} />\n            </Col></Row>}\n\n            <Row><Col>&nbsp;</Col></Row>\n\n            <CLIEquivalent command={`snapshot create ${this.state.resolvedSource ? this.state.resolvedSource.path : this.state.path}`} />\n        </>;\n    }\n}\n","import React, { Component, createRef } from 'react';\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/esm/Row';\nimport { PolicyEditor } from './PolicyEditor';\nimport { CLIEquivalent, GoBackButton, parseQuery, PolicyTypeName } from './uiutil';\n\nexport class PolicyEditorPage extends Component {\n    constructor() {\n        super();\n\n        this.editorRef = createRef();\n    }\n\n    render() {\n        const source = parseQuery(this.props.location.search);\n        const { userName, host, path } = source;\n\n        return <>\n            <h4>\n                <GoBackButton onClick={this.props.history.goBack} />\n                &nbsp;&nbsp;{PolicyTypeName(source)}</h4>\n            <PolicyEditor ref={this.editorRef} userName={userName} host={host} path={path} close={this.props.history.goBack} />\n            <Row><Col>&nbsp;</Col></Row>\n            <Row>\n                <Col xs={12}>\n                    <CLIEquivalent command={`policy set \"${userName}@${host}:${path}\"`} />\n                </Col>\n            </Row>\n        </>;\n    }\n}\n","import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { BrowserRouter as Router, NavLink, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { BeginRestore } from './BeginRestore';\nimport { DirectoryObject } from \"./DirectoryObject\";\nimport logo from './kopia-flat.svg';\nimport { PoliciesTable } from \"./PoliciesTable\";\nimport { RepoStatus } from \"./RepoStatus\";\nimport { SnapshotsTable } from \"./SnapshotsTable\";\nimport { SourcesTable } from \"./SourcesTable\";\nimport { TaskDetails } from './TaskDetails';\nimport { TasksTable } from './TasksTable'; \nimport { NewSnapshot } from './NewSnapshot';\nimport { PolicyEditorPage } from './PolicyEditorPage';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction App() {\n  const [runningTaskCount, setRunningTaskCount] = useState(0);\n\n  useInterval(() => {\n    axios.get('/api/v1/tasks-summary').then(result => {\n      setRunningTaskCount(result.data[\"RUNNING\"] || 0);\n    }).catch(error => {\n      setRunningTaskCount(-1);\n    });\n  }, 1000);\n\n  return (\n    <Router>\n      <Navbar bg=\"light\" expand=\"sm\">\n        <Navbar.Brand href=\"/\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/snapshots\">Snapshots</NavLink>\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/policies\">Policies</NavLink>\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/tasks\">Tasks <>\n              {runningTaskCount > 0 && <>({runningTaskCount})</>}\n            </>\n            </NavLink>\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/repo\">Repository</NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container fluid>\n        <Switch>\n          <Route path=\"/snapshots/new\" component={NewSnapshot} />\n          <Route path=\"/snapshots/single-source/\" component={SnapshotsTable} />\n          <Route path=\"/snapshots/dir/:oid/restore\" component={BeginRestore} />\n          <Route path=\"/snapshots/dir/:oid\"  component={DirectoryObject} />\n          <Route path=\"/snapshots\" component={SourcesTable} />\n          <Route path=\"/policies/edit/\" component={PolicyEditorPage} />\n          <Route path=\"/policies\" component={PoliciesTable} />\n          <Route path=\"/tasks/:tid\" component={TaskDetails} />\n          <Route path=\"/tasks\" component={TasksTable} />\n          <Route path=\"/repo\" component={RepoStatus} />\n          <Route exact path=\"/\">\n            <Redirect to=\"/snapshots\" />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}